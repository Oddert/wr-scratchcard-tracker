{"version":3,"sources":["components/types.ts","components/Context.ts","components/Utils.ts","components/GraphOneSeries.tsx","components/Actions.ts","components/Graphs.tsx","components/CardList/Card.tsx","components/AddGame.tsx","components/CardList/index.tsx","components/GraphControls/Toggle.tsx","components/GraphControls/index.tsx","components/SideMenu/index.tsx","components/DayControls.tsx","components/GameLine.tsx","components/AddSeries.tsx","components/DataInput.tsx","components/Reducer.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContextAction","Context","React","createContext","DataSetEnum","initialSeriesData","am","add","pm","sales","testData","initialContextState","ui","seriesActive","count","dailyExpected","dailyDiscrepancy","cumulativeExpected","cumulativeDiscrepancy","colourSets","default","selectedColours","crosshairPosition","games","id","number","name","price","counts","day","date","Date","series","gameId","fromDay","toDay","slot","data","days","dataSetInitialState","parsedData","salesData","dailyExpectedData","cumulativeExpectedData","dailyDiscrepancyData","cumulativeDiscrepancyData","dataSetReducer","state","action","type","SET_PARSED_DATA","payload","SET_SALES_DATA","SET_DAILY_EXPECTED_DATA","SET_CUMULATIVE_EXPECTED_DATA","SET_DAILY_DISCREPANCY_DATA","SET_CUMULATIVE_DISCREPANCY_DATA","GraphOneSeries","seriesIdx","useReducer","dataSets","localDispatch","useState","hintValue","setHintValue","crosshairValue","setCrosshairValue","useContext","dispatch","game","find","colours","SHOW_SALES","SHOW_COUNT","SHOW_DAILY_EXPECTED","SHOW_DAILY_DISCREP","SHOW_CUMULATIVE_EXPECTED","SHOW_CUMULATIVE_DISCREP","tooltipStyle","css","textAlign","fontSize","padding","borderRadius","pointerEvents","boxShadow","background","margin","boxSizing","createOneSeriesPoint","dataPoint","dayIdx","time","contextLabel","offset","point","value","x","label","trim","y","useEffect","reduce","acc","each","Number","prevDay","length","today","numberOfSales","push","console","log","discrepancy","pmDiscrepancy","handleMarkMouseOver","e","newCrosshairData","filter","dailyDiscrep","cumulativeExpect","cumulativeDiscrep","crosshairSeriesStyle","whiteSpace","position","width","height","onMouseLeave","UI_UNSET_CROSSHAIR_POS","style","color","onValueMouseOver","onNearestX","datapoint","UI_SET_CROSSHAIR_POS","crosshairPositionSet","Math","round","values","transform","display","flexDirection","Graphs","map","idx","Card","justifyContent","opacity","onClick","gameUpdate","GAME_REMOVE_ONE","gameRemoveOne","marginLeft","border","AddGame","open","setOpen","setName","setNumber","setPrice","onSubmit","preventDefault","inUse","test","String","newGame","max","sort","a","b","GAME_ADD_ONE","gameAddOne","alignItems","onChange","target","key","min","CardList","listStyleType","Toggle","str","seriesSwitch","backgroundColor","marginRight","htmlFor","substring","toUpperCase","UI_SET_SERIES","checked","GraphControls","Object","keys","SideMenu","top","maxHeight","overflowY","DayControls","DAY_DECREMENT","val","isNaN","DAY_SET","daySet","DAY_INCREMENT","GameLine","updateGameId","error","updateSeries","SERIES_UPDATE_CARD","gameChangeCard","placeholder","SERIES_DATA_UPDATE_AM","SERIES_DATA_UPDATE_ADDITIONS","SERIES_DATA_UPDATE_PM","SERIES_DATA_UPDATE_SALES","AddSeries","setGame","createSeries","SERIES_ADD_ONE","seriesAddOne","DataInput","ContextReducer","reduceGameRemoveOne","reduceDaySet","reduceDayInc","reduceDayDec","reduceSeriesAddOne","updateData","reduceSeriesDataUpdateAM","reduceSeriesDataUpdatePM","reduceSeriesDataUpdateSales","reduceSeriesDataUpdateAdditions","reduceSeriesChangeCard","SERIES_SLOT_UPDATE","reduceSeriesSlotUpdate","reduceUiSetSeries","reduceUiCrosshairSet","reduceUiCrosshairReset","warn","App","Provider","className","minHeight","flex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1693e944.chunk.js","sourcesContent":["\r\nexport type OneDay = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday'\r\n\t\r\nexport interface Game {\r\n\tid: number\r\n\tname: string\r\n\tnumber: number\r\n\tprice: number\r\n}\r\n\r\nexport interface Count { \r\n\tid: number\r\n\tday: OneDay\r\n\tdate: Date\r\n}\r\n\r\nexport interface SeriesData {\r\n\tam: number\r\n\tadd?: number\r\n\tpm: number\r\n\tsales: number\r\n}\r\n\r\nexport interface Series {\r\n\tgameId: number\r\n\tfromDay: number\r\n\ttoDay: number\r\n\tslot: number\r\n\tdata: SeriesData[]\r\n}\r\n\r\nexport interface ColourSets {\r\n\tsales: string\r\n\tcount: string\r\n\tdailyExpected: string\r\n\tdailyDiscrepancy: string\r\n\tcumulativeExpected: string\r\n\tcumulativeDiscrepancy: string\r\n}\r\n\r\nexport interface UIStateType {\r\n\tseriesActive: {\r\n\t\tcount: Boolean\r\n\t\tsales: Boolean\r\n\t\tdailyExpected: Boolean\r\n\t\tdailyDiscrepancy: Boolean\r\n\t\tcumulativeExpected: Boolean \t\r\n\t\tcumulativeDiscrepancy: Boolean\r\n\t}\r\n\tcolourSets: {\r\n\t\tdefault: ColourSets\r\n\t}\r\n\tselectedColours: ColourSets\r\n\tcrosshairPosition: null | number\r\n}\r\n\r\nexport interface ContextStateType {\r\n\tgames: Game[]\r\n\tcounts: Count[]\r\n\tseries: Series[]\r\n\tday: number\r\n\tdays: OneDay[]\r\n\tui: UIStateType\r\n}\r\n\r\nexport enum ContextAction {\r\n\tGAME_ADD_ONE = 'GAME_ADD_ONE',\r\n\tGAME_REMOVE_ONE = 'GAME_REMOVE_ONE',\r\n\t\r\n\tDAY_SET = 'DAY_SET',\r\n\tDAY_INCREMENT = 'DAY_INCREMENT',\r\n\tDAY_DECREMENT = 'DAY_DECREMENT',\r\n\t\r\n\tSERIES_ADD_ONE = 'SERIES_ADD_ONE',\r\n\tSERIES_SLOT_UPDATE = 'SERIES_SLOT_UPDATE',\r\n\t\r\n\tSERIES_DATA_UPDATE_AM = 'SERIES_DATA_UPDATE_AM',\r\n\tSERIES_DATA_UPDATE_PM = 'SERIES_DATA_UPDATE_PM',\r\n\tSERIES_DATA_UPDATE_ADDITIONS = 'SERIES_DATA_UPDATE_ADDITIONS',\r\n\tSERIES_DATA_UPDATE_SALES = 'SERIES_DATA_UPDATE_SALES',\r\n\tSERIES_UPDATE_CARD = 'SERIES_UPDATE_CARD',\r\n\t\r\n\tUI_SET_SERIES = 'UI_SET_SERIES',\r\n\tUI_SET_CROSSHAIR_POS = 'UI_SET_CROSSHAIR_POS',\r\n\tUI_UNSET_CROSSHAIR_POS = 'UI_UNSET_CROSSHAIR_POS',\r\n}\r\n\r\nexport interface ContextActionType {\r\n\ttype: ContextAction\r\n\tpayload: any\r\n}","import React from 'react'\r\n\r\nconst Context = React.createContext<any> ({\r\n\r\n})\r\n\r\nexport default Context","\r\nimport {\r\n\tContextStateType,\r\n\tSeriesData,\r\n\t// ContextActionType,\r\n} from './types'\r\n\r\nexport const initialSeriesData: SeriesData[] = [\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n]\r\n\r\nconst testData: SeriesData[][] = [\r\n\t// [\r\n\t// \t{ am: 15, add: 0, pm: 15, sales: 0 },\r\n\t// \t{ am: 14, add: 0, pm: 14, sales: 5 },\r\n\t// \t{ am: 15, add: 0, pm: 14, sales: 0 },\r\n\t// \t{ am: 14, add: 0, pm: 7, sales: 30 },\r\n\t// \t{ am: 7, add: 0, pm: 6, sales: 5 },\r\n\t// \t{ am: 7, add: 16, pm: 22, sales: 0 },\r\n\t// \t{ am: 22, add: 0, pm: 22, sales: 0 },\r\n\t// ],\r\n\t[\r\n\t\t{ am: 0, add: 14, pm: 4, sales: 50 },\r\n\t\t{ am: 4, add: 0, pm: 0, sales: 20 },\r\n\t\t{ am: 0, add: 20, pm: 20, sales: 0 },\r\n\t\t{ am: 20, add: 0, pm: 15, sales: 25 },\r\n\t\t{ am: 15, add: 0, pm: 10, sales: 25 },\r\n\t\t{ am: 10, add: 20, pm: 21, sales: 40 },\r\n\t\t{ am: 21, add: 0, pm: 11, sales: 50 },\r\n\t],\r\n\t[\r\n\t\t{ am: 0, add: 20, pm: 20, sales: 0 },\r\n\t\t{ am: 20, add: 0, pm: 18, sales: 10 },\r\n\t\t{ am: 18, add: 0, pm: 16, sales: 10 },\r\n\t\t{ am: 16, add: 0, pm: 15, sales: 5 },\r\n\t\t{ am: 15, add: 0, pm: 14, sales: 10 },\r\n\t\t{ am: 13, add: 10, pm: 19, sales: 20 },\r\n\t\t{ am: 19, add: 0, pm: 19, sales: 0 },\r\n\t],\r\n\t[\r\n\t\t{ am: 12, add: 10, pm: 22, sales: 0 },\r\n\t\t{ am: 22, add: 0, pm: 20, sales: 10 },\r\n\t\t{ am: 20, add: 0, pm: 19, sales: 5 },\r\n\t\t{ am: 19, add: 0, pm: 13, sales: 30 },\r\n\t\t{ am: 13, add: 0, pm: 10, sales: 20 },\r\n\t\t{ am: 9, add: 14, pm: 20, sales: 20 },\r\n\t\t{ am: 20, add: 0, pm: 19, sales: 5 },\r\n\t]\r\n]\r\n\r\nexport const initialContextState: ContextStateType = {\r\n\tui: {\r\n\t\tseriesActive: {\r\n\t\t\tcount: true,\r\n\t\t\tsales: false,\r\n\t\t\tdailyExpected: true,\r\n\t\t\tdailyDiscrepancy: false,\r\n\t\t\tcumulativeExpected: false,\t\r\n\t\t\tcumulativeDiscrepancy: false,\r\n\t\t},\r\n\t\tcolourSets: {\r\n\t\t\tdefault: {\r\n\t\t\t\tsales: 'pink',\r\n\t\t\t\tcount: '#4285f4',\r\n\t\t\t\tdailyExpected: '#34a853',\r\n\t\t\t\tdailyDiscrepancy: '#ea4335',\r\n\t\t\t\tcumulativeExpected: '#fbbc04',\r\n\t\t\t\tcumulativeDiscrepancy: 'purple',\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectedColours: {\r\n\t\t\tsales: 'pink',\r\n\t\t\tcount: '#4285f4',\r\n\t\t\tdailyExpected: '#34a853',\r\n\t\t\tdailyDiscrepancy: '#ea4335',\r\n\t\t\tcumulativeExpected: '#fbbc04',\r\n\t\t\tcumulativeDiscrepancy: 'purple',\r\n\t\t},\r\n\t\tcrosshairPosition: 8,\r\n\t},\r\n\tgames: [\r\n\t\t{ id: 0, number: 1256, name: 'Mono Mill', price: 5 },\r\n\t\t{ id: 1, number: 1255, name: '50X', price: 5 },\r\n\t\t{ id: 2, number: 1262, name: '100K AMFAY', price: 5 },\r\n\t\t{ id: 3, number: 1193, name: 'Fruity 500', price: 5 },\r\n\t\t{ id: 4, number: 1192, name: 'Cash 7s', price: 5 },\r\n\t\t{ id: 5, number: 1223, name: 'Red Hot Bingo', price: 3 },\r\n\t\t{ id: 6, number: 1261, name: '250K Orange', price: 2 },\r\n\t\t{ id: 7, number: 1244, name: '20K AMFAY', price: 2 },\r\n\t\t{ id: 8, number: 1226, name: 'Spin 100', price: 2 },\r\n\t\t{ id: 9, number: 1228, name: '100K Pink', price: 1 },\r\n\t\t{ id: 10, number: 1274, name: 'Cash Trippler', price: 1 },\r\n\t\t{ id: 11, number: 1248, name: 'Cash Grid', price: 1 },\r\n\t],\r\n\tcounts: [\r\n\t\t{ id: 1, day: 'Monday', date: new Date(),  },\r\n\t],\r\n\tseries: [\r\n\t\t{ gameId: 0, fromDay: 0, toDay: 6, slot: 1, data: testData[0] }, \r\n\t\t{ gameId: 1, fromDay: 0, toDay: 6, slot: 2, data: testData[1] },\r\n\t\t{ gameId: 3, fromDay: 0, toDay: 6, slot: 3, data: testData[2] },\r\n\t],\r\n\tday: 0,\r\n\tdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n}\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/react'\r\nimport React, { \r\n\tCSSProperties, \r\n\tuseContext, \r\n\tuseEffect,\r\n\tuseReducer, \r\n\tuseState \r\n} from 'react'\r\n\r\nimport {\r\n\tXYPlot,\r\n\tLineSeries,\r\n\tMarkSeries,\r\n\tHint,\r\n\tHorizontalGridLines,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCrosshair,\r\n} from 'react-vis'\r\n\r\n\r\nimport { crosshairPositionSet, crosshairReset } from './Actions'\r\nimport Context from './Context'\r\n\r\nimport {\r\n\tSeriesData,\r\n\tContextStateType,\r\n\tGame,\r\n} from './types'\r\n\r\ninterface Props {\r\n\tseriesIdx: number\r\n}\r\n\r\nenum DataSetEnum {\r\n\tSET_PARSED_DATA = 'SET_PARSED_DATA',\r\n\tSET_SALES_DATA = 'SET_SALES_DATA',\r\n\tSET_DAILY_EXPECTED_DATA = 'SET_DAILY_EXPECTED_DATA',\r\n\tSET_CUMULATIVE_EXPECTED_DATA = 'SET_CUMULATIVE_EXPECTED_DATA',\r\n\tSET_DAILY_DISCREPANCY_DATA = 'SET_DAILY_DISCREPANCY_DATA',\r\n\tSET_CUMULATIVE_DISCREPANCY_DATA = 'SET_CUMULATIVE_DISCREPANCY_DATA',\r\n}\r\n\r\ninterface OneSeriesPoint {\r\n\tlabel: string\r\n\ty: number,\r\n\tx: number\r\n}\r\n\r\ninterface DataSetState {\r\n\tparsedData: OneSeriesPoint[]\r\n\tsalesData: OneSeriesPoint[]\r\n\tdailyExpectedData: OneSeriesPoint[]\r\n\tcumulativeExpectedData: OneSeriesPoint[]\r\n\tdailyDiscrepancyData: OneSeriesPoint[]\r\n\tcumulativeDiscrepancyData: OneSeriesPoint[]\r\n}\r\n\r\ninterface DataSetAction { \r\n\ttype: DataSetEnum, \r\n\tpayload: any \r\n}\r\n\r\nconst dataSetInitialState: DataSetState = {\r\n\tparsedData: [],\r\n\tsalesData: [],\r\n\tdailyExpectedData: [],\r\n\tcumulativeExpectedData: [],\r\n\tdailyDiscrepancyData: [],\r\n\tcumulativeDiscrepancyData: [],\r\n}\r\n\r\nfunction dataSetReducer (state: DataSetState, action: DataSetAction): DataSetState {\r\n\tswitch (action.type) {\r\n\t\tcase DataSetEnum.SET_PARSED_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tparsedData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_SALES_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsalesData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_DAILY_EXPECTED_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdailyExpectedData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_CUMULATIVE_EXPECTED_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcumulativeExpectedData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_DAILY_DISCREPANCY_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdailyDiscrepancyData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_CUMULATIVE_DISCREPANCY_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcumulativeDiscrepancyData: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\ninterface CrosshairValue {\r\n\tcount?: OneSeriesPoint\r\n\tsales?: OneSeriesPoint\r\n\tdailyExpected?: OneSeriesPoint\r\n\tdailyDiscrepancy?: OneSeriesPoint\r\n\tcumulativeExpected?: OneSeriesPoint\r\n\tcumulativeDiscrepancy?: OneSeriesPoint\r\n}\r\n\r\nconst GraphOneSeries: React.FC<Props> = ({\r\n\tseriesIdx,\r\n}) => {\r\n\tconst WIDTH = 1000\r\n\tconst HEIGHT = 400\r\n\tconst STEP = 3\r\n\r\n\t// swap out for a controler later\r\n\tconst INCLUDE_CD = false\r\n\r\n\tconst [dataSets, localDispatch]: [DataSetState, any] = useReducer(dataSetReducer, dataSetInitialState)\r\n\tconst [hintValue, setHintValue]: [OneSeriesPoint | null, any] = useState(null)\r\n\tconst [crosshairValue, setCrosshairValue]: [CrosshairValue | null, any] = useState(null)\r\n\tconst { state, dispatch }: { state: ContextStateType, dispatch: any } = useContext(Context)\r\n\r\n\tconst { ui: { seriesActive, selectedColours, crosshairPosition } } = state\r\n\tconst { games, days } = state\r\n\r\n\tconst series = state.series[seriesIdx]\r\n\tconst { data, gameId } = series\r\n\r\n\tconst game = games.find((game: Game) => game.id === gameId)\r\n\tconst colours = selectedColours\r\n\r\n\tconst SHOW_SALES = seriesActive.sales\r\n\tconst SHOW_COUNT = seriesActive.count\r\n\tconst SHOW_DAILY_EXPECTED = seriesActive.dailyExpected\r\n\tconst SHOW_DAILY_DISCREP = seriesActive.dailyDiscrepancy\r\n\tconst SHOW_CUMULATIVE_EXPECTED = seriesActive.cumulativeExpected\r\n\tconst SHOW_CUMULATIVE_DISCREP = seriesActive.cumulativeDiscrepancy\r\n\r\n\tconst tooltip: CSSProperties = {\r\n\t\ttextAlign: 'left',\r\n\t\t// background: '#ecf0f1',\r\n\t\t// color: '#333',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '6px',\r\n\t\tborderRadius: '5px',\r\n\t\tpointerEvents: 'none',\r\n\t\tboxShadow: '5px 5px 5px rgba(0,0,0,.3)',\r\n\t\tbackground: '#3A3A48',\r\n\t\tmargin: '5px',\r\n\t\tboxSizing: 'border-box',\r\n\t}\r\n\r\n\t// const tooltipStyle = css`\r\n\t// \ttext-align: left;\r\n\t// \tfont-size: 12px;\r\n\t// \tpadding: 6px;\r\n\t// \tborder-radius: 5px;\r\n\t// \tpointer-events: none;\r\n\t// \tbox-shadow: 5px 5px 5px rgba(0,0,0,.3);\r\n\t// \tbackground: #3A3A48;\r\n\t// \tmargin: 5px;\r\n\t// \tboxSizing: border-box;\r\n\t// `\r\n\r\nconst tooltipStyle = css({\r\n\t\ttextAlign: 'left',\r\n\t\t// background: '#ecf0f1',\r\n\t\t// color: '#333',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '6px',\r\n\t\tborderRadius: '5px',\r\n\t\tpointerEvents: 'none',\r\n\t\tboxShadow: '5px 5px 5px rgba(0,0,0,.3)',\r\n\t\tbackground: '#3A3A48',\r\n\t\tmargin: '5px',\r\n\t\tboxSizing: 'border-box',\r\n})\r\n\r\n\t// Count\r\n\tuseEffect(() => {\r\n\t\tconst parsedData: OneSeriesPoint[] = data.reduce((acc: any, each: SeriesData, dayIdx: number) => {\r\n\t\t\tlet cd = false\r\n\t\t\tif (each.add && each.add !== 0) cd = true\r\n\t\t\tconst add = Number(each.add)\r\n\t\t\tif (cd && INCLUDE_CD) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...acc, \r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'am', 'Count: '),  \r\n\t\t\t\t\tpoint(days[dayIdx], 'change demand', each.am + add, (dayIdx * STEP) + 1),\r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'pm', 'Count: ')\r\n\t\t\t\t]\r\n\t\t\t} else {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...acc, \r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'am', 'Count: '),\r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'pm', 'Count: ')\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}, [])\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_PARSED_DATA,\r\n\t\t\tpayload: parsedData\r\n\t\t})\r\n\t\t\r\n\t\t// eslint-disable-next-line\r\n\t}, [data, days, INCLUDE_CD])\r\n\r\n\r\n\t// Sales\r\n\tuseEffect(() => {\r\n\t\tconst salesData: OneSeriesPoint[] = data.reduce((acc: OneSeriesPoint[], each: SeriesData, dayIdx: number) => {\r\n\t\t\tconst price = game ? game.price : 1\r\n\t\t\treturn [\r\n\t\t\t\t...acc,\r\n\t\t\t\tpoint(days[dayIdx], 'pm sales', each.sales / price, (dayIdx * STEP) + 2)\r\n\t\t\t]\r\n\t\t}, [])\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_SALES_DATA,\r\n\t\t\tpayload: salesData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Cumulative Expected\r\n\tuseEffect(() => {\r\n\r\n\t\tconst price: number = game ? game.price : 1\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\t\tconst cumulativeExpectedData: OneSeriesPoint[] = []\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx++) {\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tconst today: SeriesData = data[0]\r\n\t\t\t\tconst numberOfSales = today.sales / price\r\n\t\t\t\tconst am = today.am\r\n\t\t\t\tconst pm = today.am + Number(today.add) - numberOfSales\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'am', am, (dayIdx * STEP), 'Cumulative Expected Number: '))\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'pm', pm, (dayIdx * STEP) + 2, 'Cumulative Expected Number: '))\r\n\t\t\t\tprevDay = today\r\n\t\t\t} else {\r\n\t\t\t\tconst today = data[dayIdx]\r\n\t\t\t\tconst numberOfSales = today.sales / price\r\n\t\t\t\tconst am = prevDay.pm\r\n\t\t\t\tconst pm = prevDay.pm + Number(today.add) - numberOfSales\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'am', am, (dayIdx * STEP), 'Cumulative Expected Number: '))\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'pm', pm, (dayIdx * STEP) + 2, 'Cumulative Expected Number: '))\r\n\t\t\t\tprevDay = { ...today, am, pm }\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(cumulativeExpectedData)\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_CUMULATIVE_EXPECTED_DATA,\r\n\t\t\tpayload: cumulativeExpectedData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Daily Expected\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dailyExpectedData: OneSeriesPoint[] = []\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx ++) {\r\n\t\t\tconst today: SeriesData = data[dayIdx]\r\n\t\t\tconst price = game ? game.price : 1\r\n\t\t\tconst numberOfSales = today.sales / price\r\n\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'am', today.am, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'pm', today.am + Number(today.add) - numberOfSales, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t} else {\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'am', prevDay.pm, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'pm', prevDay.pm + Number(today.add) - numberOfSales, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t\tprevDay = today\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_DAILY_EXPECTED_DATA,\r\n\t\t\tpayload: dailyExpectedData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Daily Discrepancy\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dailyDiscrepancyData: OneSeriesPoint[] = []\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx ++) {\r\n\t\t\tconst today: SeriesData = data[dayIdx]\r\n\t\t\tconst price: number = game ? game.price : 1\r\n\t\t\tconst numberOfSales: number = today.sales / price\r\n\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'am', 0, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'pm', (today.am + Number(today.add) - numberOfSales) - today.pm, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t} else {\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'am', prevDay.pm - today.am, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'pm', (prevDay.pm + Number(today.add) - numberOfSales) - today.pm, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t\tprevDay = today\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_DAILY_DISCREPANCY_DATA,\r\n\t\t\tpayload: dailyDiscrepancyData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Cumulative Discrepancy\r\n\tuseEffect(() => {\r\n\t\tconst cumulativeDiscrepancyData: OneSeriesPoint[] = []\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\t\tlet discrepancy: number = 0\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx ++) {\r\n\t\t\tconst today: SeriesData = data[dayIdx]\r\n\t\t\tconst price: number = game ? game.price : 1\r\n\t\t\tconst numberOfSales: number = today.sales / price\r\n\r\n\t\t\tlet pmDiscrepancy: number\r\n\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tpmDiscrepancy = (today.am + Number(today.add) - numberOfSales) - today.pm\r\n\t\t\t} else {\r\n\t\t\t\tpmDiscrepancy = (prevDay.pm + Number(today.add) - numberOfSales) - today.pm\r\n\t\t\t\tprevDay = today\r\n\t\t\t}\r\n\r\n\t\t\tdiscrepancy += pmDiscrepancy\r\n\t\t\tcumulativeDiscrepancyData.push(point(days[dayIdx], 'pm', discrepancy, (dayIdx * STEP) + 2, 'Cumulative Discrepancy: '))\r\n\t\t}\r\n\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_CUMULATIVE_DISCREPANCY_DATA,\r\n\t\t\tpayload: cumulativeDiscrepancyData\r\n\t\t})\r\n\r\n\t}, [data, days, game])\r\n\r\n\r\n\r\n\tfunction createOneSeriesPoint (\r\n\t\tdataPoint: SeriesData, \r\n\t\tdayIdx: number, \r\n\t\ttime: 'am' | 'pm', \r\n\t\tcontextLabel?: string\r\n\t): OneSeriesPoint {\r\n\t\tconst offset = time === 'am' ? 0 : 2\r\n\t\treturn point(days[dayIdx], time, dataPoint[time], (dayIdx * STEP) + offset, contextLabel)\r\n\t}\r\n\r\n\tfunction point (\r\n\t\tday: string, \r\n\t\ttime: 'am' | 'pm' | 'change demand' | 'pm sales', \r\n\t\tvalue: number, \r\n\t\tx: number, \r\n\t\tcontextLabel?: string\r\n\t) {\r\n\t\treturn { \r\n\t\t\tlabel: `${contextLabel || ''} ${day} ${time}`.trim(),\r\n\t\t\ty: value,\r\n\t\t\t// @ts-ignore\r\n\t\t\tx\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMarkMouseOver = (e: any) => {\r\n\t\tsetHintValue(e)\r\n\t}\r\n\r\n\tconst handleCrosshairChange = (datapoint: any) => {\r\n\t\tconst { x } = datapoint\r\n\t\tdispatch(crosshairPositionSet(x))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newCrosshairData: CrosshairValue = {}\r\n\r\n\t\tconst filter = (each: OneSeriesPoint) => each.x === crosshairPosition\r\n\r\n\t\tconst count = dataSets.parsedData.find(filter)\r\n\t\tconst sales = dataSets.salesData.find(filter)\r\n\t\tconst dailyExpected = dataSets.dailyExpectedData.find(filter)\r\n\t\tconst dailyDiscrep = dataSets.dailyDiscrepancyData.find(filter)\r\n\t\tconst cumulativeExpect = dataSets.cumulativeExpectedData.find(filter)\r\n\t\tconst cumulativeDiscrep = dataSets.cumulativeDiscrepancyData.find(filter)\r\n\r\n\t\tnewCrosshairData.count = count\r\n\t\tif (SHOW_SALES && sales) newCrosshairData.sales = sales\r\n\t\tif (SHOW_DAILY_EXPECTED && dailyExpected) newCrosshairData.dailyExpected = dailyExpected\r\n\t\tif (SHOW_DAILY_DISCREP && dailyDiscrep) newCrosshairData.dailyDiscrepancy = dailyDiscrep\r\n\t\tif (SHOW_CUMULATIVE_EXPECTED && cumulativeExpect) newCrosshairData.cumulativeExpected = cumulativeExpect\r\n\t\tif (SHOW_CUMULATIVE_DISCREP && cumulativeDiscrep) newCrosshairData.cumulativeDiscrepancy = cumulativeDiscrep\r\n\r\n\t\tsetCrosshairValue(newCrosshairData)\r\n\t}, [\r\n\t\tSHOW_SALES,\r\n\t\tSHOW_DAILY_EXPECTED,\r\n\t\tSHOW_DAILY_DISCREP,\r\n\t\tSHOW_CUMULATIVE_DISCREP,\r\n\t\tSHOW_CUMULATIVE_EXPECTED,\r\n\t\tcrosshairPosition,\r\n\t\tdataSets\r\n\t])\r\n\r\n\tconst handleMouseLeave = () => {\r\n\t\tsetHintValue(null)\r\n\t\tsetCrosshairValue(null)\r\n\t\tdispatch(crosshairReset())\r\n\t}\r\n\r\n\tif (dataSets.parsedData.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tNO DATA\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t// const crosshairSeriesStyle: CSSProperties = {\r\n\t// \tmargin: '2px',\r\n\t// \twhiteSpace: 'nowrap',\r\n\t// }\r\n\tconst crosshairSeriesStyle = css({\r\n\t\tmargin: '2px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={css({\r\n\t\t\t\tposition: 'relative'\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<h3>\r\n\t\t\t\t{\r\n\t\t\t\t\tgame ? `${game.number} - ${game.name} (£${game.price})` : ''\t\r\n\t\t\t\t}\r\n\t\t\t</h3>\r\n\t\t\t<XYPlot\r\n\t\t\t\twidth={WIDTH}\r\n\t\t\t\theight={HEIGHT}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t\t// animation={true}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t// position: 'relative'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<HorizontalGridLines />\r\n\t\t\t\t<XAxis />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_DAILY_EXPECTED && \r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyExpectedData}\r\n\t\t\t\t\t\tcolor={colours.dailyExpected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_EXPECTED &&\r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeExpectedData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeExpected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_DISCREP &&\r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeDiscrepancy}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_SALES && \r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.salesData}\r\n\t\t\t\t\t\tcolor={colours.sales}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_DAILY_DISCREP && \r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.dailyDiscrepancy}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_COUNT &&\r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.parsedData}\r\n\t\t\t\t\t\tcolor={colours.count}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_DAILY_EXPECTED &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyExpectedData}\r\n\t\t\t\t\t\tcolor={colours.dailyExpected}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_EXPECTED &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeExpectedData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeExpected}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_DISCREP &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeDiscrepancy}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_SALES && \r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.salesData}\r\n\t\t\t\t\t\tcolor={colours.sales}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_DAILY_DISCREP && \r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.dailyDiscrepancy}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_COUNT &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.parsedData}\r\n\t\t\t\t\t\tcolor={colours.count}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t<MarkSeries \r\n\t\t\t\t\tdata={dataSets.parsedData}\r\n\t\t\t\t\tcolor={'rgba(0,0,0,0)'}\r\n\t\t\t\t\t// onValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpointerEvents: 'none'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonNearestX={handleCrosshairChange}\r\n\t\t\t\t/>\r\n\t\t\t\t{\r\n\t\t\t\t\t(hintValue !== null) && \r\n\t\t\t\t\t<Hint \r\n\t\t\t\t\t\tvalue={hintValue} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tcss={tooltipStyle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t<p css={css({margin: '0'})}>{hintValue.label}</p>\r\n\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t<p css={css({margin: '0'})}>Day: {Math.round(hintValue.x)}</p>\r\n\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t<p css={css({margin: '0'})}>Number: {Math.round(hintValue.y)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Hint>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t(crosshairPosition !== null) && \r\n\t\t\t\t\t<Crosshair \r\n\t\t\t\t\t\tvalues={[{ x: crosshairPosition }]} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(crosshairValue !== null) &&\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\t\t\t\t...tooltip,\r\n\t\t\t\t\t\t\t\t\ttransform: 'translateY(-100%)',\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.count ? <p css={crosshairSeriesStyle}>{`Count: ${crosshairValue.count.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.sales ? <p css={crosshairSeriesStyle}>{`Sales: ${crosshairValue.sales.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.dailyExpected ? <p css={crosshairSeriesStyle}>{`Expected: ${crosshairValue.dailyExpected.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.dailyDiscrepancy ? <p css={crosshairSeriesStyle}>{`Discrepancy: ${crosshairValue.dailyDiscrepancy.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.cumulativeExpected ? <p css={crosshairSeriesStyle}>{`Cumulative Expected Value: ${crosshairValue.cumulativeExpected.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.cumulativeDiscrepancy ? <p css={crosshairSeriesStyle}>{`Cumulative Discrepancy Value: ${crosshairValue.cumulativeDiscrepancy.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Crosshair>\r\n\t\t\t\t}\r\n\t\t\t</XYPlot>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GraphOneSeries","import {\r\n\tGame,\r\n\tSeries,\r\n\tContextAction,\r\n} from './types'\r\n\r\nimport { initialSeriesData } from './Utils'\r\n\r\nexport const gameAddOne = (games: Game[], name: string, number: number, price: number) => {\r\n\tconst accept = games.reduce((acc, each) => {\r\n\t\tif (String(each.number) === String(number)) return false\r\n\t\telse return acc\r\n\t}, true)\r\n\r\n\tif (!accept) return \r\n\r\n\tconst largestId = Math.max(...games.map(e => e.id))\r\n\t\r\n\tconst newGame: Game = {\r\n\t\tid: largestId + 1,\r\n\t\tname,\r\n\t\tnumber,\r\n\t\tprice,\r\n\t}\r\n\r\n\tconst gameUpdate = [\r\n\t\t...games,\r\n\t\tnewGame\r\n\t]\r\n\t.sort((a, b) => a.number - b.number)\r\n\t.sort((a, b) => b.price - a.price)\r\n\t\r\n\treturn {\r\n\t\ttype: ContextAction.GAME_ADD_ONE,\r\n\t\tpayload: gameUpdate\r\n\t}\r\n}\r\n\r\nexport const gameRemoveOne = (games: Game[], id: number) => {\r\n\tconst gameUpdate = games.filter((each: Game) => each.id !== id)\r\n\treturn {\r\n\t\ttype: ContextAction.GAME_REMOVE_ONE,\r\n\t\tpayload: gameUpdate\r\n\t}\r\n}\r\n\r\nexport const gameChangeCard = (series: Series[], seriesIdx: number, updateGameId: number) => {\r\n\tconst gameId: number = Number(updateGameId)\r\n\tif (isNaN(gameId)) {\r\n\t\tconsole.error(`[gameChangeCard]: Failed to dispatch action, requested game ID is not a number`, {series, seriesIdx, gameId: updateGameId})\r\n\t\treturn {}\r\n\t}\r\n\tconst updateSeries = series.map((each: Series, idx: number) => {\r\n\t\tif (idx === seriesIdx) {\r\n\t\t\treturn {\r\n\t\t\t\t...each,\r\n\t\t\t\tgameId,\r\n\t\t\t}\r\n\t\t} else return each\r\n\t})\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_UPDATE_CARD,\r\n\t\tpayload: updateSeries,\r\n\t}\r\n}\r\n\r\nexport const daySet = (value: number | string) => {\r\n\tconst val = Number(value)\r\n\tif (isNaN(val) || value < 0 || value > 6) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn {\r\n\t\t\ttype: ContextAction.DAY_SET,\r\n\t\t\tpayload: val,\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const dayIncrement = () => {\r\n\treturn {\r\n\t\ttype: ContextAction.DAY_INCREMENT,\r\n\t}\r\n}\r\n\r\nexport const dayDecrement = () => {\r\n\treturn {\r\n\t\ttype: ContextAction.DAY_DECREMENT,\r\n\t}\r\n}\r\n\r\nexport const seriesAddOne = (gameId: number, fromDay?: number, toDay?: number, slot?: number) => {\r\n\tconst createSeries: Series = {\r\n\t\tgameId,\r\n\t\tfromDay: fromDay || 0,\r\n\t\ttoDay: toDay || 6,\r\n\t\tslot: slot || 0,\r\n\t\tdata: initialSeriesData\r\n\t}\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_ADD_ONE,\r\n\t\tpayload: createSeries\r\n\t}\r\n}\r\n\r\nexport const seriesUpdateSlot = (seriesIdx: number | string, slot: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_SLOT_UPDATE,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(slot)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdateAM = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_AM,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdatePM = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_PM,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdateSales = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_SALES,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdateAdditions = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_ADDITIONS,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const crosshairPositionSet = (x: number) => {\r\n\treturn {\r\n\t\ttype: ContextAction.UI_SET_CROSSHAIR_POS,\r\n\t\tpayload: x\r\n\t}\r\n}\r\n\r\nexport const crosshairReset = () => {\r\n\treturn {\r\n\t\ttype: ContextAction.UI_UNSET_CROSSHAIR_POS\r\n\t}\r\n}","import React, { useContext } from 'react'\r\nimport Context from './Context'\r\n\r\nimport GraphOneSeries from './GraphOneSeries'\r\nimport { initialContextState } from './Utils'\r\n\r\ninterface Props {}\r\n\r\nconst Graphs: React.FC<Props> = () => {\r\n\tconst { state }: { state: typeof initialContextState } = useContext(Context)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tstate.series.map((each: any, idx: number) => \r\n\t\t\t\t\t<GraphOneSeries\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tseriesIdx={idx}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Graphs ","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, {\r\n\tuseContext\r\n} from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n// import { MdClear } from 'react-icons/md'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport {\r\n\tgameRemoveOne,\r\n} from '../Actions'\r\n\r\nimport Context from '../Context'\r\n\r\nimport {\r\n\tGame\r\n} from '../types'\r\n\r\ninterface Props {\r\n\tgame: Game\r\n}\r\n\r\nconst Card: React.FC<Props> = ({\r\n\tgame,\r\n}) => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\r\n\tconst { price, number, name } = game\r\n\r\n\tconst handleDelete = () => dispatch(gameRemoveOne(state.games, game.id))\r\n\treturn (\r\n\t<li\r\n\t\tcss={css({\r\n\t\t\twidth: '100%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t})}\r\n\t>\r\n\t\t<span>\r\n\t\t\t<span\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\topacity: .5,\r\n\t\t\t\t\tmargin: '0 20px'\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t£{ price }\r\n\t\t\t</span>\r\n\t\t\t<strong>\r\n\t\t\t\t{ number }\r\n\t\t\t</strong>\r\n\t\t\t<span>\r\n\t\t\t\t{` - ${ name }`}\r\n\t\t\t</span>\r\n\t\t</span>\r\n\t\t<button\r\n\t\t\tonClick={handleDelete}\r\n\t\t\tcss={css({\r\n\t\t\t\tmarginLeft: 20,\r\n\t\t\t\tbackground: 'none',\r\n\t\t\t\tborder: 'none',\r\n\t\t\t\tcolor: '#ecf0f1',\r\n\t\t\t\topacity: .5,\r\n\t\t\t\t\":hover\": {\r\n\t\t\t\t\tbackground: '#bec3c7',\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tcolor: '#333',\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<FaTimes />\r\n\t\t\t{/* <MdClear /> */}\r\n\t\t</button>\r\n\t</li>\r\n\t)\r\n}\r\n\r\nexport default Card","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext, useState } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport Context from './Context'\r\nimport {\r\n\tgameAddOne,\r\n} from './Actions'\r\n\r\nimport {\r\n\tContextStateType,\r\n} from './types'\r\n\r\ninterface Props {\r\n\t// addGame: (name: string, number: number, price: number) => any\r\n}\r\n\r\nconst AddGame: React.FC<Props> = () => {\r\n\tconst { state, dispatch }: { state: ContextStateType, dispatch: any } = useContext(Context)\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [number, setNumber] = useState(1000)\r\n\tconst [price, setPrice] = useState(5)\r\n\r\n\tconst submitGame = (e: any) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst inUse = state.games.reduce((acc, each) => {\r\n\t\t\tif (Number(number) === Number(each.number)) return true\r\n\t\t\telse return acc \r\n\t\t}, false)\r\n\r\n\t\tif (number === 1000 || !/[a-zA-Z]/gi.test(name) || inUse) return\r\n\r\n\t\tdispatch(gameAddOne(state.games, name, number, price))\r\n\t}\r\n\r\n\tconst toggleOpen = () => setOpen(!open)\r\n\r\n\tconst pricepoints: [5,3,2,1] = [5,3,2,1]\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button \r\n\t\t\t\tonClick={toggleOpen}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\topen\r\n\t\t\t\t\t\t? 'Add New Game'\r\n\t\t\t\t\t\t: 'Close'\r\n\t\t\t\t}\r\n\t\t\t</button>\r\n\t\t\t{\r\n\t\t\t\t!open && (\r\n\t\t\t\t\t<form\r\n\t\t\t\t\t\tonSubmit={submitGame}\r\n\t\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\talignItems: 'stretch',\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\t\tvalue={price}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setPrice(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpricepoints.map((each: number) => \r\n\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={each}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={each}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t£{each}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tmin={1000}\r\n\t\t\t\t\t\t\t\tmax={9999}\r\n\t\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setNumber(e.target.value)}\r\n\t\t\t\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\t\t\t\twidth: '8ch',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue='Add Game'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddGame","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport {\r\n\tGame,\r\n} from '../types'\r\n\r\nimport Context from '../Context'\r\n\r\nimport Card from './Card'\r\nimport AddGame from '../AddGame'\r\n\r\nconst CardList: React.FC = () => {\r\n\tconst { state } = useContext(Context)\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t// justifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<h3\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\tGames\r\n\t\t\t</h3>\r\n\t\t\t<AddGame />\r\n\t\t\t<ul\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tlistStyleType: 'none',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tstate.games.map((each: Game) => \r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={each.id}\r\n\t\t\t\t\t\t\tgame={each} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardList","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport { ContextAction } from '../types'\r\n\r\nimport Context from '../Context'\r\n\r\ninterface Props {\r\n\tseriesSwitch: string\r\n}\r\n\r\nconst Toggle: React.FC<Props> = ({\r\n\tseriesSwitch,\r\n}) => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\r\n\tconst { seriesActive, selectedColours } = state.ui\r\n\r\n\tconst id = `seriesVisualisationToggle_${seriesSwitch}`\r\n\r\n\tconst sanitiseLabel = (str: string) => {\r\n\t\treturn `${str.substring(0,1).toUpperCase()}${str.substring(1)}`\r\n\t}\r\n\r\n\tconst handleChange = (e: any) => {\r\n\t\tdispatch({\r\n\t\t\ttype: ContextAction.UI_SET_SERIES,\r\n\t\t\tpayload: {\r\n\t\t\t\tkey: seriesSwitch,\r\n\t\t\t\tvalue: !seriesActive[seriesSwitch]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst w = 6\r\n\tconst h = 25\r\n\r\n\treturn (\r\n\t\t<li\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t}}\r\n\t\t>\t\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: `${w}px`,\r\n\t\t\t\t\theight: `${h}px`,\r\n\t\t\t\t\tbackgroundColor: selectedColours[seriesSwitch],\r\n\t\t\t\t\tmarginRight: 20,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<label \r\n\t\t\t\t\thtmlFor={id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsanitiseLabel(seriesSwitch)\r\n\t\t\t\t\t}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tchecked={seriesActive[seriesSwitch]}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\tmarginLeft: 40,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Toggle","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport {\r\n\tContextStateType,\r\n} from '../types'\r\n\r\nimport Context from '../Context'\r\n\r\nimport Toggle from './Toggle'\r\n\r\nconst GraphControls: React.FC = () => {\r\n\tconst { state }: { state: ContextStateType } = useContext(Context)\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={css({\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t// justifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<h3\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\tFilter\r\n\t\t\t</h3>\r\n\t\t\t<ul\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.keys(state.ui.seriesActive).map((series: any, idx: any) => \r\n\t\t\t\t\t\t<Toggle \r\n\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\tseriesSwitch={series}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GraphControls","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport CardList from '../CardList/'\r\nimport GraphControls from '../GraphControls'\r\n\r\nconst SideMenu: React.FC = () => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={css({\r\n\t\t\t\tbackground: '#464646',\r\n\t\t\t\tboxShadow: '10px 0px 10px rgba(0,0,0,.15)',\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\t// border: '1px dashed tomato',\r\n\t\t\t\t\tposition: 'sticky',\r\n\t\t\t\t\ttop: '0px',\r\n\t\t\t\t\tmaxHeight: '100vh',\r\n\t\t\t\t\toverflowY: 'auto',\r\n\t\t\t\t\tpadding: '0px 30px',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<GraphControls />\r\n\t\t\t\t<CardList />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SideMenu","import React, { useContext } from 'react'\r\nimport { dayDecrement, dayIncrement, daySet } from './Actions'\r\nimport Context from './Context'\r\n\r\ninterface Props {\r\n\t\r\n}\r\n\r\nconst DayControls: React.FC<Props> = () => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\tconst { day, days } = state\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{days[day%7]}</p>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => dispatch(dayDecrement())}>Previous Day</button>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e: any) => daySet(e.target.value)} \r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={() => dispatch(dayIncrement())}>Next Day</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default DayControls ","import React, { useContext } from 'react'\r\n\r\nimport { \r\n\tGame,\r\n} from './types'\r\n\r\nimport {\r\n\tgameChangeCard,\r\n\tseriesDataUpdateAdditions,\r\n\tseriesDataUpdateAM,\r\n\tseriesDataUpdatePM,\r\n\tseriesDataUpdateSales,\r\n\t// seriesUpdateSlot,\r\n} from './Actions'\r\n\r\nimport Context from './Context'\r\n\r\ninterface Props {\r\n\tidx: number\r\n\tgameId: number\r\n}\r\n\r\nconst GameLine: React.FC<Props> = ({\r\n\tidx,\r\n\tgameId,\r\n}) => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\r\n\tconst data = state.series[idx].data\r\n\t// const slot = state.series[idx].slot\r\n\r\n\tconst { am, pm, add, sales } = data[state.day]\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t{/* <td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='slot number (set 0 for no slot)'\r\n\t\t\t\t\tvalue={slot}\r\n\t\t\t\t\tonChange={(e: any) => dispatch(seriesUpdateSlot(idx, e.target.value))}\r\n\t\t\t\t/>\r\n\t\t\t</td> */}\r\n\t\t\t<td>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={gameId}\r\n\t\t\t\t\tonChange={(e: any) => dispatch(gameChangeCard(state.series, idx, e.target.value))}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate.games.map((each: Game) => \r\n\t\t\t\t\t\t\t<option \r\n\t\t\t\t\t\t\t\tvalue={each.id}\r\n\t\t\t\t\t\t\t\tkey={each.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ each.number } - { each.name }\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='AM Count' \r\n\t\t\t\t\tvalue={am} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdateAM(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='additions' \r\n\t\t\t\t\tvalue={add} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdateAdditions(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='PM Count' \r\n\t\t\t\t\tvalue={pm} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdatePM(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='VBS Sales' \r\n\t\t\t\t\tvalue={sales} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdateSales(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t)\r\n}\r\n\r\nexport default GameLine","import React, { useContext, useState } from 'react'\r\n\r\nimport { Game } from './types'\r\nimport { seriesAddOne } from './Actions'\r\nimport Context from './Context'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddSeries: React.FC<Props> = () => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\tconst [game, setGame]: [number, any] = useState(0)\r\n\r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(seriesAddOne(game, 0, 6, 0))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t<select\r\n\t\t\t\tvalue={game}\r\n\t\t\t\tonChange={(e: any) => setGame(Number(e.target.value))}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tstate.games.map((each: Game) => \r\n\t\t\t\t\t\t<option \r\n\t\t\t\t\t\t\tvalue={each.id}\r\n\t\t\t\t\t\t\tkey={each.id}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ each.number } - { each.name }\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<input type='submit' value='Create New Series' />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default AddSeries","import React, {\r\n\tuseContext\r\n} from 'react'\r\n\r\nimport {\r\n\tSeries\r\n} from './types'\r\n\r\nimport Context from './Context'\r\n\r\nimport DayControls from './DayControls'\r\nimport GameLine from './GameLine'\r\nimport AddSeries from './AddSeries'\r\n\r\nconst DataInput: React.FC = () => {\r\n\tconst { state } = useContext(Context)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<DayControls />\r\n\t\t\t<p>New Count</p>\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{/* <th>Slot Number</th> */}\r\n\t\t\t\t\t\t<th>Game</th>\r\n\t\t\t\t\t\t<th>AM Count</th>\r\n\t\t\t\t\t\t<th>Additions</th>\r\n\t\t\t\t\t\t<th>PM Count</th>\r\n\t\t\t\t\t\t<th>Sales (VBS)</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate.series.map((each: Series, idx: number) => \r\n\t\t\t\t\t\t\t<GameLine \r\n\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\tgameId={each.gameId}\r\n\t\t\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<AddSeries />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DataInput","\r\nimport { \r\n\tContextStateType, \r\n\tContextActionType,\r\n\tContextAction,\r\n} from './types'\r\n\r\nconst ContextReducer = (state: ContextStateType, action: ContextActionType) => {\r\n\tconsole.log(state, action)\r\n\tswitch (action.type) {\r\n\t\tcase ContextAction.GAME_ADD_ONE: return reduceGameAddOne(state, action)\r\n\t\tcase ContextAction.GAME_REMOVE_ONE: return reduceGameRemoveOne(state, action)\r\n\t\tcase ContextAction.DAY_SET: return reduceDaySet(state, action)\r\n\t\tcase ContextAction.DAY_INCREMENT: return reduceDayInc(state, action)\r\n\t\tcase ContextAction.DAY_DECREMENT: return reduceDayDec(state, action)\r\n\t\tcase ContextAction.SERIES_ADD_ONE: return reduceSeriesAddOne(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_AM: return reduceSeriesDataUpdateAM(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_PM: return reduceSeriesDataUpdatePM(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_SALES: return reduceSeriesDataUpdateSales(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_ADDITIONS: return reduceSeriesDataUpdateAdditions(state, action)\r\n\t\tcase ContextAction.SERIES_UPDATE_CARD: return reduceSeriesChangeCard(state, action)\r\n\t\tcase ContextAction.SERIES_SLOT_UPDATE: return reduceSeriesSlotUpdate(state, action)\r\n\t\tcase ContextAction.UI_SET_SERIES: return reduceUiSetSeries(state, action)\r\n\t\tcase ContextAction.UI_SET_CROSSHAIR_POS: return reduceUiCrosshairSet(state, action)\r\n\t\tcase ContextAction.UI_UNSET_CROSSHAIR_POS: return reduceUiCrosshairReset(state, action)\r\n\t\tdefault: {\r\n\t\t\tconsole.warn(`Default route taken on reducer for action: [${action.type}]`, state, action)\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reduceGameAddOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tgames: action.payload\r\n\t}\r\n}\r\n\r\nfunction reduceGameRemoveOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tgames: action.payload\r\n\t}\r\n}\r\n\r\nfunction reduceDaySet (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst val = Number(action.payload)\r\n\tif (isNaN(val) || val < 0 || val > 6) return  state\r\n\treturn {\r\n\t\t...state,\r\n\t\tday: val\r\n\t}\r\n}\r\n\r\nfunction reduceDayInc (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tif (state.day === 6) return state\r\n\treturn {\r\n\t\t...state,\r\n\t\tday: state.day + 1\r\n\t}\r\n}\r\n\r\nfunction reduceDayDec (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tif (state.day === 0) return state\r\n\treturn {\r\n\t\t...state,\r\n\t\tday: state.day - 1\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesAddOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries: [\r\n\t\t\t...state.series,\r\n\t\t\taction.payload\r\n\t\t]\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesSlotUpdate (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tif (isNaN(value) || value < 0 || value > 16) return state\r\n\tconst series = [...state.series]\r\n\tseries[seriesIdx].slot = value\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdateAM (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], am: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdatePM (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], pm: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdateSales (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], sales: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdateAdditions (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], add: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesChangeCard (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries: action.payload,\r\n\t}\r\n}\r\n\r\nfunction reduceUiSetSeries (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tui: {\r\n\t\t\t...state.ui,\r\n\t\t\tseriesActive: {\r\n\t\t\t\t...state.ui.seriesActive,\r\n\t\t\t\t[action.payload.key]: action.payload.value\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reduceUiCrosshairSet (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tui: {\r\n\t\t\t...state.ui,\r\n\t\t\tcrosshairPosition: action.payload\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reduceUiCrosshairReset (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tui: {\r\n\t\t\t...state.ui,\r\n\t\t\tcrosshairPosition: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ContextReducer","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport React, { \n\tuseReducer, \n\tDispatch,\n} from 'react'\nimport { css, jsx } from '@emotion/react'\n\nimport './App.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nimport Graphs from './Graphs'\nimport SideMenu from './SideMenu/'\nimport DataInput from './DataInput'\n\nimport {\n\tinitialContextState,\n} from './Utils'\n\nimport ContextReducer from './Reducer'\n\nimport { \n\tContextStateType, \n\tContextActionType \n} from './types'\n\nimport Context from './Context'\n\nconst App: React.FC = () => {\n\tconst [state, dispatch]: [ContextStateType, Dispatch<ContextActionType>] = useReducer(ContextReducer, initialContextState)\n\n  return (\n\t\t<Context.Provider\n\t\t\tvalue={{ state, dispatch }}\n\t\t>\n\t\t\t<div \n\t\t\t\tclassName=\"App\"\n\t\t\t\tcss={css({\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tminHeight: '100vh',\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<SideMenu />\n\t\t\t\t<div\n\t\t\t\t\tcss={css({\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<DataInput />\n\t\t\t\t\t<Graphs />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}