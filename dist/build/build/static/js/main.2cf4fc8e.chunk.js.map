{"version":3,"sources":["components/types.ts","components/Context.ts","components/Utils.ts","components/GraphOneSeries.tsx","components/Actions.ts","components/Graphs.tsx","components/CardList/Card.tsx","components/AddGame.tsx","components/CardList/index.tsx","components/GraphControls/Toggle.tsx","components/GraphControls/index.tsx","components/SideMenu/index.tsx","components/DayControls.tsx","components/GameLine/Delete.tsx","components/GameLine/index.tsx","components/AddSeries.tsx","components/DataInput.tsx","components/Reducer.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContextAction","Context","React","createContext","initialSeriesData","am","add","pm","sales","testData","games","id","number","name","price","planorgam","DataSetEnum","initialContextState","ui","seriesActive","count","dailyExpected","dailyDiscrepancy","cumulativeExpected","cumulativeDiscrepancy","colourSets","default","selectedColours","crosshairPosition","out","forEach","n","game","find","each","push","initialGames","counts","day","date","Date","series","gameId","fromDay","toDay","slot","data","days","dataSetInitialState","parsedData","salesData","dailyExpectedData","cumulativeExpectedData","dailyDiscrepancyData","cumulativeDiscrepancyData","dataSetReducer","state","action","type","SET_PARSED_DATA","payload","SET_SALES_DATA","SET_DAILY_EXPECTED_DATA","SET_CUMULATIVE_EXPECTED_DATA","SET_DAILY_DISCREPANCY_DATA","SET_CUMULATIVE_DISCREPANCY_DATA","GraphOneSeries","seriesIdx","useReducer","dataSets","localDispatch","useState","hintValue","setHintValue","crosshairValue","setCrosshairValue","useContext","dispatch","colours","SHOW_SALES","SHOW_COUNT","SHOW_DAILY_EXPECTED","SHOW_DAILY_DISCREP","SHOW_CUMULATIVE_EXPECTED","SHOW_CUMULATIVE_DISCREP","tooltipStyle","css","textAlign","fontSize","padding","borderRadius","pointerEvents","boxShadow","background","margin","boxSizing","createOneSeriesPoint","dataPoint","dayIdx","time","contextLabel","offset","point","value","x","label","trim","y","useEffect","reduce","acc","Number","prevDay","length","today","numberOfSales","console","log","discrepancy","pmDiscrepancy","handleMarkMouseOver","e","newCrosshairData","filter","dailyDiscrep","cumulativeExpect","cumulativeDiscrep","crosshairSeriesStyle","whiteSpace","position","width","height","onMouseLeave","UI_UNSET_CROSSHAIR_POS","style","color","onValueMouseOver","onNearestX","datapoint","UI_SET_CROSSHAIR_POS","crosshairPositionSet","Math","round","values","transform","display","flexDirection","Graphs","map","idx","Card","justifyContent","opacity","onClick","gameUpdate","GAME_REMOVE_ONE","gameRemoveOne","marginLeft","border","AddGame","open","setOpen","setName","setNumber","setPrice","onSubmit","preventDefault","inUse","test","String","newGame","max","sort","a","b","GAME_ADD_ONE","gameAddOne","alignItems","onChange","target","key","min","CardList","listStyleType","Toggle","str","seriesSwitch","backgroundColor","marginRight","htmlFor","substring","toUpperCase","UI_SET_SERIES","checked","GraphControls","Object","keys","SideMenu","top","maxHeight","overflowY","DayControls","DAY_DECREMENT","val","isNaN","DAY_SET","daySet","DAY_INCREMENT","Delete","SERIES_REMOVE_ONE","seriesRemoveOne","GameLine","updateGameId","error","updateSeries","SERIES_UPDATE_CARD","gameChangeCard","placeholder","SERIES_DATA_UPDATE_AM","SERIES_DATA_UPDATE_PM","SERIES_DATA_UPDATE_ADDITIONS","SERIES_DATA_UPDATE_SALES","AddSeries","setGame","createSeries","SERIES_ADD_ONE","seriesAddOne","DataInput","ContextReducer","reduceGameRemoveOne","reduceDaySet","reduceDayInc","reduceDayDec","reduceSeriesAddOne","first","slice","second","concat","reduceSerieseRemoveOne","updateData","reduceSeriesDataUpdateAM","reduceSeriesDataUpdatePM","reduceSeriesDataUpdateSales","reduceSeriesDataUpdateAdditions","reduceSeriesChangeCard","SERIES_SLOT_UPDATE","reduceSeriesSlotUpdate","reduceUiSetSeries","reduceUiCrosshairSet","reduceUiCrosshairReset","warn","App","Provider","className","minHeight","flex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf4fc8e.chunk.js","sourcesContent":["\r\nexport type OneDay = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday'\r\n\t\r\nexport interface Game {\r\n\tid: number\r\n\tname: string\r\n\tnumber: number\r\n\tprice: number\r\n}\r\n\r\nexport interface Count { \r\n\tid: number\r\n\tday: OneDay\r\n\tdate: Date\r\n}\r\n\r\nexport interface SeriesData {\r\n\tam: number\r\n\tadd?: number\r\n\tpm: number\r\n\tsales: number\r\n}\r\n\r\nexport interface Series {\r\n\tgameId: number\r\n\tfromDay: number\r\n\ttoDay: number\r\n\tslot: number\r\n\tdata: SeriesData[]\r\n}\r\n\r\nexport interface ColourSets {\r\n\tsales: string\r\n\tcount: string\r\n\tdailyExpected: string\r\n\tdailyDiscrepancy: string\r\n\tcumulativeExpected: string\r\n\tcumulativeDiscrepancy: string\r\n}\r\n\r\nexport interface UIStateType {\r\n\tseriesActive: {\r\n\t\tcount: Boolean\r\n\t\tsales: Boolean\r\n\t\tdailyExpected: Boolean\r\n\t\tdailyDiscrepancy: Boolean\r\n\t\tcumulativeExpected: Boolean \t\r\n\t\tcumulativeDiscrepancy: Boolean\r\n\t}\r\n\tcolourSets: {\r\n\t\tdefault: ColourSets\r\n\t}\r\n\tselectedColours: ColourSets\r\n\tcrosshairPosition: null | number\r\n}\r\n\r\nexport interface ContextStateType {\r\n\tgames: Game[]\r\n\tcounts: Count[]\r\n\tseries: Series[]\r\n\tday: number\r\n\tdays: OneDay[]\r\n\tui: UIStateType\r\n}\r\n\r\nexport enum ContextAction {\r\n\tGAME_ADD_ONE = 'GAME_ADD_ONE',\r\n\tGAME_REMOVE_ONE = 'GAME_REMOVE_ONE',\r\n\t\r\n\tDAY_SET = 'DAY_SET',\r\n\tDAY_INCREMENT = 'DAY_INCREMENT',\r\n\tDAY_DECREMENT = 'DAY_DECREMENT',\r\n\t\r\n\tSERIES_ADD_ONE = 'SERIES_ADD_ONE',\r\n\tSERIES_REMOVE_ONE = 'SERIES_REMOVE_ONE',\r\n\tSERIES_SLOT_UPDATE = 'SERIES_SLOT_UPDATE',\r\n\t\r\n\tSERIES_DATA_UPDATE_AM = 'SERIES_DATA_UPDATE_AM',\r\n\tSERIES_DATA_UPDATE_PM = 'SERIES_DATA_UPDATE_PM',\r\n\tSERIES_DATA_UPDATE_ADDITIONS = 'SERIES_DATA_UPDATE_ADDITIONS',\r\n\tSERIES_DATA_UPDATE_SALES = 'SERIES_DATA_UPDATE_SALES',\r\n\tSERIES_UPDATE_CARD = 'SERIES_UPDATE_CARD',\r\n\t\r\n\tUI_SET_SERIES = 'UI_SET_SERIES',\r\n\tUI_SET_CROSSHAIR_POS = 'UI_SET_CROSSHAIR_POS',\r\n\tUI_UNSET_CROSSHAIR_POS = 'UI_UNSET_CROSSHAIR_POS',\r\n}\r\n\r\nexport interface ContextActionType {\r\n\ttype: ContextAction\r\n\tpayload: any\r\n}","import React from 'react'\r\n\r\nconst Context = React.createContext<any> ({\r\n\r\n})\r\n\r\nexport default Context","\r\nimport {\r\n\tContextStateType,\r\n\tSeriesData,\r\n\tGame,\r\n\t// ContextActionType,\r\n} from './types'\r\n\r\nexport const initialSeriesData: SeriesData[] = [\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n\t{ am: 0, add: 0, pm: 0, sales: 0 },\r\n]\r\n\r\nconst testData: SeriesData[][] = [\r\n\t// [\r\n\t// \t{ am: 15, add: 0, pm: 15, sales: 0 },\r\n\t// \t{ am: 14, add: 0, pm: 14, sales: 5 },\r\n\t// \t{ am: 15, add: 0, pm: 14, sales: 0 },\r\n\t// \t{ am: 14, add: 0, pm: 7, sales: 30 },\r\n\t// \t{ am: 7, add: 0, pm: 6, sales: 5 },\r\n\t// \t{ am: 7, add: 16, pm: 22, sales: 0 },\r\n\t// \t{ am: 22, add: 0, pm: 22, sales: 0 },\r\n\t// ],\r\n\t[\r\n\t\t{ am: 0, add: 14, pm: 4, sales: 50 },\r\n\t\t{ am: 4, add: 0, pm: 0, sales: 20 },\r\n\t\t{ am: 0, add: 20, pm: 20, sales: 0 },\r\n\t\t{ am: 20, add: 0, pm: 15, sales: 25 },\r\n\t\t{ am: 15, add: 0, pm: 10, sales: 25 },\r\n\t\t{ am: 10, add: 20, pm: 21, sales: 40 },\r\n\t\t{ am: 21, add: 0, pm: 11, sales: 50 },\r\n\t],\r\n\t[\r\n\t\t{ am: 0, add: 20, pm: 20, sales: 0 },\r\n\t\t{ am: 20, add: 0, pm: 18, sales: 10 },\r\n\t\t{ am: 18, add: 0, pm: 16, sales: 10 },\r\n\t\t{ am: 16, add: 0, pm: 15, sales: 5 },\r\n\t\t{ am: 15, add: 0, pm: 14, sales: 10 },\r\n\t\t{ am: 13, add: 10, pm: 19, sales: 20 },\r\n\t\t{ am: 19, add: 0, pm: 19, sales: 0 },\r\n\t],\r\n\t[\r\n\t\t{ am: 12, add: 10, pm: 22, sales: 0 },\r\n\t\t{ am: 22, add: 0, pm: 20, sales: 10 },\r\n\t\t{ am: 20, add: 0, pm: 19, sales: 5 },\r\n\t\t{ am: 19, add: 0, pm: 13, sales: 30 },\r\n\t\t{ am: 13, add: 0, pm: 10, sales: 20 },\r\n\t\t{ am: 9, add: 14, pm: 20, sales: 20 },\r\n\t\t{ am: 20, add: 0, pm: 19, sales: 5 },\r\n\t]\r\n]\r\n\r\nexport const games: Game[] = [\r\n\t{ id: 0, number: 1256, name: 'Mono Mill', price: 5 },\r\n\t{ id: 1, number: 1255, name: '50X', price: 5 },\r\n\t{ id: 2, number: 1262, name: '100K AMFAY', price: 5 },\r\n\t{ id: 3, number: 1193, name: 'Fruity 500', price: 5 },\r\n\t{ id: 4, number: 1192, name: 'Cash 7s', price: 5 },\r\n\t{ id: 5, number: 1223, name: 'Red Hot Bingo', price: 3 },\r\n\t{ id: 6, number: 1261, name: '250K Orange', price: 2 },\r\n\t{ id: 7, number: 1244, name: '20K AMFAY', price: 2 },\r\n\t{ id: 8, number: 1226, name: 'Spin 100', price: 2 },\r\n\t{ id: 9, number: 1228, name: '100K Pink', price: 1 },\r\n\t{ id: 10, number: 1274, name: 'Cash Trippler', price: 1 },\r\n\t{ id: 11, number: 1248, name: 'Cash Grid', price: 1 },\r\n\t{ id: 12, number: 1259, name: 'Monopoly Millionaire', price: 5 },\r\n\t{ id: 13, number: 1252, name: '75m Spectacular', price: 5 },\r\n\t{ id: 14, number: 1287, name: '150k AMFAY', price: 5 },\r\n\t{ id: 15, number: 1280, name: 'Full of 500\\'s', price: 5 },\r\n\t{ id: 16, number: 1276, name: 'Take It Or Leave It', price: 5 },\r\n\t{ id: 17, number: 1266, name: 'Bingo Bonus', price: 3 },\r\n\t{ id: 18, number: 1283, name: '500k Green', price: 2 },\r\n\t{ id: 19, number: 1246, name: '100k Red', price: 2 },\r\n\t{ id: 20, number: 1273, name: 'Win Gold', price: 1 },\r\n\t{ id: 21, number: 1316, name: 'Wads In Your Wallet', price: 1 },\r\n]\r\n\r\nconst planorgam: number[] = [\r\n\t12,13,14,15,16,17,18,7,8,19,20,21\r\n]\r\n\r\nfunction initialGames (): Game[] {\r\n\tconst out: Game[] = []\r\n\tplanorgam.forEach((n: number) => {\r\n\t\tconst game: Game | undefined = games.find((each: Game) => each.id === n)\r\n\t\tif (game) out.push(game)\r\n\t})\r\n\treturn out\r\n}\r\n\r\nexport const initialContextState: ContextStateType = {\r\n\tui: {\r\n\t\tseriesActive: {\r\n\t\t\tcount: true,\r\n\t\t\tsales: false,\r\n\t\t\tdailyExpected: true,\r\n\t\t\tdailyDiscrepancy: false,\r\n\t\t\tcumulativeExpected: false,\t\r\n\t\t\tcumulativeDiscrepancy: false,\r\n\t\t},\r\n\t\tcolourSets: {\r\n\t\t\tdefault: {\r\n\t\t\t\tsales: 'pink',\r\n\t\t\t\tcount: '#4285f4',\r\n\t\t\t\tdailyExpected: '#34a853',\r\n\t\t\t\tdailyDiscrepancy: '#ea4335',\r\n\t\t\t\tcumulativeExpected: '#fbbc04',\r\n\t\t\t\tcumulativeDiscrepancy: 'purple',\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectedColours: {\r\n\t\t\tsales: 'pink',\r\n\t\t\tcount: '#4285f4',\r\n\t\t\tdailyExpected: '#34a853',\r\n\t\t\tdailyDiscrepancy: '#ea4335',\r\n\t\t\tcumulativeExpected: '#fbbc04',\r\n\t\t\tcumulativeDiscrepancy: 'purple',\r\n\t\t},\r\n\t\tcrosshairPosition: 8,\r\n\t},\r\n\tgames: initialGames(),\r\n\tcounts: [\r\n\t\t{ id: 1, day: 'Monday', date: new Date(),  },\r\n\t],\r\n\tseries: [\r\n\t\t{ gameId: 0, fromDay: 0, toDay: 6, slot: 1, data: testData[0] }, \r\n\t\t{ gameId: 1, fromDay: 0, toDay: 6, slot: 2, data: testData[1] },\r\n\t\t{ gameId: 3, fromDay: 0, toDay: 6, slot: 3, data: testData[2] },\r\n\t],\r\n\tday: 0,\r\n\tdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n}\r\n","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/react'\r\nimport React, { \r\n\tCSSProperties, \r\n\tuseContext, \r\n\tuseEffect,\r\n\tuseReducer, \r\n\tuseState \r\n} from 'react'\r\n\r\nimport {\r\n\tXYPlot,\r\n\tLineSeries,\r\n\tMarkSeries,\r\n\tHint,\r\n\tHorizontalGridLines,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCrosshair,\r\n} from 'react-vis'\r\n\r\n\r\nimport { crosshairPositionSet, crosshairReset } from './Actions'\r\nimport Context from './Context'\r\n\r\nimport {\r\n\tSeriesData,\r\n\tContextStateType,\r\n\tGame,\r\n} from './types'\r\n\r\ninterface Props {\r\n\tseriesIdx: number\r\n}\r\n\r\nenum DataSetEnum {\r\n\tSET_PARSED_DATA = 'SET_PARSED_DATA',\r\n\tSET_SALES_DATA = 'SET_SALES_DATA',\r\n\tSET_DAILY_EXPECTED_DATA = 'SET_DAILY_EXPECTED_DATA',\r\n\tSET_CUMULATIVE_EXPECTED_DATA = 'SET_CUMULATIVE_EXPECTED_DATA',\r\n\tSET_DAILY_DISCREPANCY_DATA = 'SET_DAILY_DISCREPANCY_DATA',\r\n\tSET_CUMULATIVE_DISCREPANCY_DATA = 'SET_CUMULATIVE_DISCREPANCY_DATA',\r\n}\r\n\r\ninterface OneSeriesPoint {\r\n\tlabel: string\r\n\ty: number,\r\n\tx: number\r\n}\r\n\r\ninterface DataSetState {\r\n\tparsedData: OneSeriesPoint[]\r\n\tsalesData: OneSeriesPoint[]\r\n\tdailyExpectedData: OneSeriesPoint[]\r\n\tcumulativeExpectedData: OneSeriesPoint[]\r\n\tdailyDiscrepancyData: OneSeriesPoint[]\r\n\tcumulativeDiscrepancyData: OneSeriesPoint[]\r\n}\r\n\r\ninterface DataSetAction { \r\n\ttype: DataSetEnum, \r\n\tpayload: any \r\n}\r\n\r\nconst dataSetInitialState: DataSetState = {\r\n\tparsedData: [],\r\n\tsalesData: [],\r\n\tdailyExpectedData: [],\r\n\tcumulativeExpectedData: [],\r\n\tdailyDiscrepancyData: [],\r\n\tcumulativeDiscrepancyData: [],\r\n}\r\n\r\nfunction dataSetReducer (state: DataSetState, action: DataSetAction): DataSetState {\r\n\tswitch (action.type) {\r\n\t\tcase DataSetEnum.SET_PARSED_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tparsedData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_SALES_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsalesData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_DAILY_EXPECTED_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdailyExpectedData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_CUMULATIVE_EXPECTED_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcumulativeExpectedData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_DAILY_DISCREPANCY_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdailyDiscrepancyData: action.payload\r\n\t\t\t}\r\n\t\tcase DataSetEnum.SET_CUMULATIVE_DISCREPANCY_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcumulativeDiscrepancyData: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\ninterface CrosshairValue {\r\n\tcount?: OneSeriesPoint\r\n\tsales?: OneSeriesPoint\r\n\tdailyExpected?: OneSeriesPoint\r\n\tdailyDiscrepancy?: OneSeriesPoint\r\n\tcumulativeExpected?: OneSeriesPoint\r\n\tcumulativeDiscrepancy?: OneSeriesPoint\r\n}\r\n\r\nconst GraphOneSeries: React.FC<Props> = ({\r\n\tseriesIdx,\r\n}) => {\r\n\tconst WIDTH = 1000\r\n\tconst HEIGHT = 400\r\n\tconst STEP = 3\r\n\r\n\t// swap out for a controler later\r\n\tconst INCLUDE_CD = false\r\n\r\n\tconst [dataSets, localDispatch]: [DataSetState, any] = useReducer(dataSetReducer, dataSetInitialState)\r\n\tconst [hintValue, setHintValue]: [OneSeriesPoint | null, any] = useState(null)\r\n\tconst [crosshairValue, setCrosshairValue]: [CrosshairValue | null, any] = useState(null)\r\n\tconst { state, dispatch }: { state: ContextStateType, dispatch: any } = useContext(Context)\r\n\r\n\tconst { ui: { seriesActive, selectedColours, crosshairPosition } } = state\r\n\tconst { games, days } = state\r\n\r\n\tconst series = state.series[seriesIdx]\r\n\tconst { data, gameId } = series\r\n\r\n\tconst game = games.find((game: Game) => game.id === gameId)\r\n\tconst colours = selectedColours\r\n\r\n\tconst SHOW_SALES = seriesActive.sales\r\n\tconst SHOW_COUNT = seriesActive.count\r\n\tconst SHOW_DAILY_EXPECTED = seriesActive.dailyExpected\r\n\tconst SHOW_DAILY_DISCREP = seriesActive.dailyDiscrepancy\r\n\tconst SHOW_CUMULATIVE_EXPECTED = seriesActive.cumulativeExpected\r\n\tconst SHOW_CUMULATIVE_DISCREP = seriesActive.cumulativeDiscrepancy\r\n\r\n\tconst tooltip: CSSProperties = {\r\n\t\ttextAlign: 'left',\r\n\t\t// background: '#ecf0f1',\r\n\t\t// color: '#333',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '6px',\r\n\t\tborderRadius: '5px',\r\n\t\tpointerEvents: 'none',\r\n\t\tboxShadow: '5px 5px 5px rgba(0,0,0,.3)',\r\n\t\tbackground: '#3A3A48',\r\n\t\tmargin: '5px',\r\n\t\tboxSizing: 'border-box',\r\n\t}\r\n\r\n\t// const tooltipStyle = css`\r\n\t// \ttext-align: left;\r\n\t// \tfont-size: 12px;\r\n\t// \tpadding: 6px;\r\n\t// \tborder-radius: 5px;\r\n\t// \tpointer-events: none;\r\n\t// \tbox-shadow: 5px 5px 5px rgba(0,0,0,.3);\r\n\t// \tbackground: #3A3A48;\r\n\t// \tmargin: 5px;\r\n\t// \tboxSizing: border-box;\r\n\t// `\r\n\r\nconst tooltipStyle = css({\r\n\t\ttextAlign: 'left',\r\n\t\t// background: '#ecf0f1',\r\n\t\t// color: '#333',\r\n\t\tfontSize: '12px',\r\n\t\tpadding: '6px',\r\n\t\tborderRadius: '5px',\r\n\t\tpointerEvents: 'none',\r\n\t\tboxShadow: '5px 5px 5px rgba(0,0,0,.3)',\r\n\t\tbackground: '#3A3A48',\r\n\t\tmargin: '5px',\r\n\t\tboxSizing: 'border-box',\r\n})\r\n\r\n\t// Count\r\n\tuseEffect(() => {\r\n\t\tconst parsedData: OneSeriesPoint[] = data.reduce((acc: any, each: SeriesData, dayIdx: number) => {\r\n\t\t\tlet cd = false\r\n\t\t\tif (each.add && each.add !== 0) cd = true\r\n\t\t\tconst add = Number(each.add)\r\n\t\t\tif (cd && INCLUDE_CD) {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...acc, \r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'am', 'Count: '),  \r\n\t\t\t\t\tpoint(days[dayIdx], 'change demand', each.am + add, (dayIdx * STEP) + 1),\r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'pm', 'Count: ')\r\n\t\t\t\t]\r\n\t\t\t} else {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t...acc, \r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'am', 'Count: '),\r\n\t\t\t\t\tcreateOneSeriesPoint(each, dayIdx, 'pm', 'Count: ')\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}, [])\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_PARSED_DATA,\r\n\t\t\tpayload: parsedData\r\n\t\t})\r\n\t\t\r\n\t\t// eslint-disable-next-line\r\n\t}, [data, days, INCLUDE_CD])\r\n\r\n\r\n\t// Sales\r\n\tuseEffect(() => {\r\n\t\tconst salesData: OneSeriesPoint[] = data.reduce((acc: OneSeriesPoint[], each: SeriesData, dayIdx: number) => {\r\n\t\t\tconst price = game ? game.price : 1\r\n\t\t\treturn [\r\n\t\t\t\t...acc,\r\n\t\t\t\tpoint(days[dayIdx], 'pm sales', each.sales / price, (dayIdx * STEP) + 2)\r\n\t\t\t]\r\n\t\t}, [])\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_SALES_DATA,\r\n\t\t\tpayload: salesData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Cumulative Expected\r\n\tuseEffect(() => {\r\n\r\n\t\tconst price: number = game ? game.price : 1\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\t\tconst cumulativeExpectedData: OneSeriesPoint[] = []\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx++) {\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tconst today: SeriesData = data[0]\r\n\t\t\t\tconst numberOfSales = today.sales / price\r\n\t\t\t\tconst am = today.am\r\n\t\t\t\tconst pm = today.am + Number(today.add) - numberOfSales\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'am', am, (dayIdx * STEP), 'Cumulative Expected Number: '))\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'pm', pm, (dayIdx * STEP) + 2, 'Cumulative Expected Number: '))\r\n\t\t\t\tprevDay = today\r\n\t\t\t} else {\r\n\t\t\t\tconst today = data[dayIdx]\r\n\t\t\t\tconst numberOfSales = today.sales / price\r\n\t\t\t\tconst am = prevDay.pm\r\n\t\t\t\tconst pm = prevDay.pm + Number(today.add) - numberOfSales\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'am', am, (dayIdx * STEP), 'Cumulative Expected Number: '))\r\n\t\t\t\tcumulativeExpectedData.push(point(days[dayIdx], 'pm', pm, (dayIdx * STEP) + 2, 'Cumulative Expected Number: '))\r\n\t\t\t\tprevDay = { ...today, am, pm }\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(cumulativeExpectedData)\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_CUMULATIVE_EXPECTED_DATA,\r\n\t\t\tpayload: cumulativeExpectedData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Daily Expected\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dailyExpectedData: OneSeriesPoint[] = []\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx ++) {\r\n\t\t\tconst today: SeriesData = data[dayIdx]\r\n\t\t\tconst price = game ? game.price : 1\r\n\t\t\tconst numberOfSales = today.sales / price\r\n\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'am', today.am, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'pm', today.am + Number(today.add) - numberOfSales, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t} else {\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'am', prevDay.pm, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyExpectedData.push(point(days[dayIdx], 'pm', prevDay.pm + Number(today.add) - numberOfSales, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t\tprevDay = today\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_DAILY_EXPECTED_DATA,\r\n\t\t\tpayload: dailyExpectedData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Daily Discrepancy\r\n\tuseEffect(() => {\r\n\r\n\t\tconst dailyDiscrepancyData: OneSeriesPoint[] = []\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx ++) {\r\n\t\t\tconst today: SeriesData = data[dayIdx]\r\n\t\t\tconst price: number = game ? game.price : 1\r\n\t\t\tconst numberOfSales: number = today.sales / price\r\n\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'am', 0, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'pm', (today.am + Number(today.add) - numberOfSales) - today.pm, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t} else {\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'am', prevDay.pm - today.am, (dayIdx * STEP), 'Daily Expected Number: '))\r\n\t\t\t\tdailyDiscrepancyData.push(point(days[dayIdx], 'pm', (prevDay.pm + Number(today.add) - numberOfSales) - today.pm, (dayIdx * STEP) + 2, 'Daily Expected Number: '))\r\n\t\t\t\tprevDay = today\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_DAILY_DISCREPANCY_DATA,\r\n\t\t\tpayload: dailyDiscrepancyData\r\n\t\t})\r\n\t}, [data, days, game])\r\n\r\n\r\n\t// Cumulative Discrepancy\r\n\tuseEffect(() => {\r\n\t\tconst cumulativeDiscrepancyData: OneSeriesPoint[] = []\r\n\t\tlet prevDay: SeriesData = data[0]\r\n\t\tlet discrepancy: number = 0\r\n\r\n\t\tfor (let dayIdx = 0; dayIdx < data.length; dayIdx ++) {\r\n\t\t\tconst today: SeriesData = data[dayIdx]\r\n\t\t\tconst price: number = game ? game.price : 1\r\n\t\t\tconst numberOfSales: number = today.sales / price\r\n\r\n\t\t\tlet pmDiscrepancy: number\r\n\r\n\t\t\tif (dayIdx === 0) {\r\n\t\t\t\tpmDiscrepancy = (today.am + Number(today.add) - numberOfSales) - today.pm\r\n\t\t\t} else {\r\n\t\t\t\tpmDiscrepancy = (prevDay.pm + Number(today.add) - numberOfSales) - today.pm\r\n\t\t\t\tprevDay = today\r\n\t\t\t}\r\n\r\n\t\t\tdiscrepancy += pmDiscrepancy\r\n\t\t\tcumulativeDiscrepancyData.push(point(days[dayIdx], 'pm', discrepancy, (dayIdx * STEP) + 2, 'Cumulative Discrepancy: '))\r\n\t\t}\r\n\r\n\t\tlocalDispatch({\r\n\t\t\ttype: DataSetEnum.SET_CUMULATIVE_DISCREPANCY_DATA,\r\n\t\t\tpayload: cumulativeDiscrepancyData\r\n\t\t})\r\n\r\n\t}, [data, days, game])\r\n\r\n\r\n\r\n\tfunction createOneSeriesPoint (\r\n\t\tdataPoint: SeriesData, \r\n\t\tdayIdx: number, \r\n\t\ttime: 'am' | 'pm', \r\n\t\tcontextLabel?: string\r\n\t): OneSeriesPoint {\r\n\t\tconst offset = time === 'am' ? 0 : 2\r\n\t\treturn point(days[dayIdx], time, dataPoint[time], (dayIdx * STEP) + offset, contextLabel)\r\n\t}\r\n\r\n\tfunction point (\r\n\t\tday: string, \r\n\t\ttime: 'am' | 'pm' | 'change demand' | 'pm sales', \r\n\t\tvalue: number, \r\n\t\tx: number, \r\n\t\tcontextLabel?: string\r\n\t) {\r\n\t\treturn { \r\n\t\t\tlabel: `${contextLabel || ''} ${day} ${time}`.trim(),\r\n\t\t\ty: value,\r\n\t\t\t// @ts-ignore\r\n\t\t\tx\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMarkMouseOver = (e: any) => {\r\n\t\tsetHintValue(e)\r\n\t}\r\n\r\n\tconst handleCrosshairChange = (datapoint: any) => {\r\n\t\tconst { x } = datapoint\r\n\t\tdispatch(crosshairPositionSet(x))\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newCrosshairData: CrosshairValue = {}\r\n\r\n\t\tconst filter = (each: OneSeriesPoint) => each.x === crosshairPosition\r\n\r\n\t\tconst count = dataSets.parsedData.find(filter)\r\n\t\tconst sales = dataSets.salesData.find(filter)\r\n\t\tconst dailyExpected = dataSets.dailyExpectedData.find(filter)\r\n\t\tconst dailyDiscrep = dataSets.dailyDiscrepancyData.find(filter)\r\n\t\tconst cumulativeExpect = dataSets.cumulativeExpectedData.find(filter)\r\n\t\tconst cumulativeDiscrep = dataSets.cumulativeDiscrepancyData.find(filter)\r\n\r\n\t\tnewCrosshairData.count = count\r\n\t\tif (SHOW_SALES && sales) newCrosshairData.sales = sales\r\n\t\tif (SHOW_DAILY_EXPECTED && dailyExpected) newCrosshairData.dailyExpected = dailyExpected\r\n\t\tif (SHOW_DAILY_DISCREP && dailyDiscrep) newCrosshairData.dailyDiscrepancy = dailyDiscrep\r\n\t\tif (SHOW_CUMULATIVE_EXPECTED && cumulativeExpect) newCrosshairData.cumulativeExpected = cumulativeExpect\r\n\t\tif (SHOW_CUMULATIVE_DISCREP && cumulativeDiscrep) newCrosshairData.cumulativeDiscrepancy = cumulativeDiscrep\r\n\r\n\t\tsetCrosshairValue(newCrosshairData)\r\n\t}, [\r\n\t\tSHOW_SALES,\r\n\t\tSHOW_DAILY_EXPECTED,\r\n\t\tSHOW_DAILY_DISCREP,\r\n\t\tSHOW_CUMULATIVE_DISCREP,\r\n\t\tSHOW_CUMULATIVE_EXPECTED,\r\n\t\tcrosshairPosition,\r\n\t\tdataSets\r\n\t])\r\n\r\n\tconst handleMouseLeave = () => {\r\n\t\tsetHintValue(null)\r\n\t\tsetCrosshairValue(null)\r\n\t\tdispatch(crosshairReset())\r\n\t}\r\n\r\n\tif (dataSets.parsedData.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tNO DATA\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t// const crosshairSeriesStyle: CSSProperties = {\r\n\t// \tmargin: '2px',\r\n\t// \twhiteSpace: 'nowrap',\r\n\t// }\r\n\tconst crosshairSeriesStyle = css({\r\n\t\tmargin: '2px',\r\n\t\twhiteSpace: 'nowrap',\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={css({\r\n\t\t\t\tposition: 'relative'\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<h3>\r\n\t\t\t\t{\r\n\t\t\t\t\tgame ? `${game.number} - ${game.name} (£${game.price})` : ''\t\r\n\t\t\t\t}\r\n\t\t\t</h3>\r\n\t\t\t<XYPlot\r\n\t\t\t\twidth={WIDTH}\r\n\t\t\t\theight={HEIGHT}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t\t// animation={true}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t// position: 'relative'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<HorizontalGridLines />\r\n\t\t\t\t<XAxis />\r\n\t\t\t\t<YAxis />\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_DAILY_EXPECTED && \r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyExpectedData}\r\n\t\t\t\t\t\tcolor={colours.dailyExpected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_EXPECTED &&\r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeExpectedData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeExpected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_DISCREP &&\r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeDiscrepancy}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_SALES && \r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.salesData}\r\n\t\t\t\t\t\tcolor={colours.sales}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_DAILY_DISCREP && \r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.dailyDiscrepancy}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_COUNT &&\r\n\t\t\t\t\t<LineSeries \r\n\t\t\t\t\t\tdata={dataSets.parsedData}\r\n\t\t\t\t\t\tcolor={colours.count}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_DAILY_EXPECTED &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyExpectedData}\r\n\t\t\t\t\t\tcolor={colours.dailyExpected}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_EXPECTED &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeExpectedData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeExpected}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_CUMULATIVE_DISCREP &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.cumulativeDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.cumulativeDiscrepancy}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_SALES && \r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.salesData}\r\n\t\t\t\t\t\tcolor={colours.sales}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{ \r\n\t\t\t\t\tSHOW_DAILY_DISCREP && \r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.dailyDiscrepancyData}\r\n\t\t\t\t\t\tcolor={colours.dailyDiscrepancy}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tSHOW_COUNT &&\r\n\t\t\t\t\t<MarkSeries \r\n\t\t\t\t\t\tdata={dataSets.parsedData}\r\n\t\t\t\t\t\tcolor={colours.count}\r\n\t\t\t\t\t\tonValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t<MarkSeries \r\n\t\t\t\t\tdata={dataSets.parsedData}\r\n\t\t\t\t\tcolor={'rgba(0,0,0,0)'}\r\n\t\t\t\t\t// onValueMouseOver={handleMarkMouseOver}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpointerEvents: 'none'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonNearestX={handleCrosshairChange}\r\n\t\t\t\t/>\r\n\t\t\t\t{\r\n\t\t\t\t\t(hintValue !== null) && \r\n\t\t\t\t\t<Hint \r\n\t\t\t\t\t\tvalue={hintValue} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tcss={tooltipStyle}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t<p css={css({margin: '0'})}>{hintValue.label}</p>\r\n\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t<p css={css({margin: '0'})}>Day: {Math.round(hintValue.x)}</p>\r\n\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t<p css={css({margin: '0'})}>Number: {Math.round(hintValue.y)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Hint>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t(crosshairPosition !== null) && \r\n\t\t\t\t\t<Crosshair \r\n\t\t\t\t\t\tvalues={[{ x: crosshairPosition }]} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(crosshairValue !== null) &&\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\t\t\t\t...tooltip,\r\n\t\t\t\t\t\t\t\t\ttransform: 'translateY(-100%)',\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.count ? <p css={crosshairSeriesStyle}>{`Count: ${crosshairValue.count.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.sales ? <p css={crosshairSeriesStyle}>{`Sales: ${crosshairValue.sales.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.dailyExpected ? <p css={crosshairSeriesStyle}>{`Expected: ${crosshairValue.dailyExpected.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.dailyDiscrepancy ? <p css={crosshairSeriesStyle}>{`Discrepancy: ${crosshairValue.dailyDiscrepancy.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.cumulativeExpected ? <p css={crosshairSeriesStyle}>{`Cumulative Expected Value: ${crosshairValue.cumulativeExpected.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t\t{/* @ts-ignore */}\r\n\t\t\t\t\t\t\t\t{crosshairValue.cumulativeDiscrepancy ? <p css={crosshairSeriesStyle}>{`Cumulative Discrepancy Value: ${crosshairValue.cumulativeDiscrepancy.y}`}</p> : ''}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Crosshair>\r\n\t\t\t\t}\r\n\t\t\t</XYPlot>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GraphOneSeries","import {\r\n\tGame,\r\n\tSeries,\r\n\tContextAction,\r\n} from './types'\r\n\r\nimport { initialSeriesData } from './Utils'\r\n\r\nexport const gameAddOne = (games: Game[], name: string, number: number, price: number) => {\r\n\tconst accept = games.reduce((acc, each) => {\r\n\t\tif (String(each.number) === String(number)) return false\r\n\t\telse return acc\r\n\t}, true)\r\n\r\n\tif (!accept) return \r\n\r\n\tconst largestId = Math.max(...games.map(e => e.id))\r\n\t\r\n\tconst newGame: Game = {\r\n\t\tid: largestId + 1,\r\n\t\tname,\r\n\t\tnumber,\r\n\t\tprice,\r\n\t}\r\n\r\n\tconst gameUpdate = [\r\n\t\t...games,\r\n\t\tnewGame\r\n\t]\r\n\t.sort((a, b) => a.number - b.number)\r\n\t.sort((a, b) => b.price - a.price)\r\n\t\r\n\treturn {\r\n\t\ttype: ContextAction.GAME_ADD_ONE,\r\n\t\tpayload: gameUpdate\r\n\t}\r\n}\r\n\r\nexport const gameRemoveOne = (games: Game[], id: number) => {\r\n\tconst gameUpdate = games.filter((each: Game) => each.id !== id)\r\n\treturn {\r\n\t\ttype: ContextAction.GAME_REMOVE_ONE,\r\n\t\tpayload: gameUpdate\r\n\t}\r\n}\r\n\r\nexport const gameChangeCard = (series: Series[], seriesIdx: number, updateGameId: number) => {\r\n\tconst gameId: number = Number(updateGameId)\r\n\tif (isNaN(gameId)) {\r\n\t\tconsole.error(`[gameChangeCard]: Failed to dispatch action, requested game ID is not a number`, {series, seriesIdx, gameId: updateGameId})\r\n\t\treturn {}\r\n\t}\r\n\tconst updateSeries = series.map((each: Series, idx: number) => {\r\n\t\tif (idx === seriesIdx) {\r\n\t\t\treturn {\r\n\t\t\t\t...each,\r\n\t\t\t\tgameId,\r\n\t\t\t}\r\n\t\t} else return each\r\n\t})\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_UPDATE_CARD,\r\n\t\tpayload: updateSeries,\r\n\t}\r\n}\r\n\r\nexport const daySet = (value: number | string) => {\r\n\tconst val = Number(value)\r\n\tif (isNaN(val) || value < 0 || value > 6) {\r\n\t\treturn\r\n\t} else {\r\n\t\treturn {\r\n\t\t\ttype: ContextAction.DAY_SET,\r\n\t\t\tpayload: val,\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const dayIncrement = () => {\r\n\treturn {\r\n\t\ttype: ContextAction.DAY_INCREMENT,\r\n\t}\r\n}\r\n\r\nexport const dayDecrement = () => {\r\n\treturn {\r\n\t\ttype: ContextAction.DAY_DECREMENT,\r\n\t}\r\n}\r\n\r\nexport const seriesAddOne = (gameId: number, fromDay?: number, toDay?: number, slot?: number) => {\r\n\tconst createSeries: Series = {\r\n\t\tgameId,\r\n\t\tfromDay: fromDay || 0,\r\n\t\ttoDay: toDay || 6,\r\n\t\tslot: slot || 0,\r\n\t\tdata: initialSeriesData\r\n\t}\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_ADD_ONE,\r\n\t\tpayload: createSeries\r\n\t}\r\n}\r\n\r\nexport const seriesRemoveOne = (idx: number) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_REMOVE_ONE,\r\n\t\tpayload: idx\r\n\t}\r\n}\r\n\r\nexport const seriesUpdateSlot = (seriesIdx: number | string, slot: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_SLOT_UPDATE,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(slot)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdateAM = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_AM,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdatePM = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_PM,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdateSales = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_SALES,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const seriesDataUpdateAdditions = (seriesIdx: number | string, value: number | string) => {\r\n\treturn {\r\n\t\ttype: ContextAction.SERIES_DATA_UPDATE_ADDITIONS,\r\n\t\tpayload: {\r\n\t\t\tseriesIdx,\r\n\t\t\tvalue: Number(value),\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const crosshairPositionSet = (x: number) => {\r\n\treturn {\r\n\t\ttype: ContextAction.UI_SET_CROSSHAIR_POS,\r\n\t\tpayload: x\r\n\t}\r\n}\r\n\r\nexport const crosshairReset = () => {\r\n\treturn {\r\n\t\ttype: ContextAction.UI_UNSET_CROSSHAIR_POS\r\n\t}\r\n}","import React, { useContext } from 'react'\r\nimport Context from './Context'\r\n\r\nimport GraphOneSeries from './GraphOneSeries'\r\nimport { initialContextState } from './Utils'\r\n\r\ninterface Props {}\r\n\r\nconst Graphs: React.FC<Props> = () => {\r\n\tconst { state }: { state: typeof initialContextState } = useContext(Context)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tstate.series.map((each: any, idx: number) => \r\n\t\t\t\t\t<GraphOneSeries\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tseriesIdx={idx}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Graphs ","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, {\r\n\tuseContext\r\n} from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n// import { MdClear } from 'react-icons/md'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport {\r\n\tgameRemoveOne,\r\n} from '../Actions'\r\n\r\nimport Context from '../Context'\r\n\r\nimport {\r\n\tGame\r\n} from '../types'\r\n\r\ninterface Props {\r\n\tgame: Game\r\n}\r\n\r\nconst Card: React.FC<Props> = ({\r\n\tgame,\r\n}) => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\r\n\tconst { price, number, name } = game\r\n\r\n\tconst handleDelete = () => dispatch(gameRemoveOne(state.games, game.id))\r\n\treturn (\r\n\t<li\r\n\t\tcss={css({\r\n\t\t\twidth: '100%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'space-between',\r\n\t\t})}\r\n\t>\r\n\t\t<span>\r\n\t\t\t<span\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\topacity: .5,\r\n\t\t\t\t\tmargin: '0 20px'\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t£{ price }\r\n\t\t\t</span>\r\n\t\t\t<strong>\r\n\t\t\t\t{ number }\r\n\t\t\t</strong>\r\n\t\t\t<span>\r\n\t\t\t\t{` - ${ name }`}\r\n\t\t\t</span>\r\n\t\t</span>\r\n\t\t<button\r\n\t\t\tonClick={handleDelete}\r\n\t\t\tcss={css({\r\n\t\t\t\tmarginLeft: 20,\r\n\t\t\t\tbackground: 'none',\r\n\t\t\t\tborder: 'none',\r\n\t\t\t\tcolor: '#ecf0f1',\r\n\t\t\t\topacity: .5,\r\n\t\t\t\t\":hover\": {\r\n\t\t\t\t\tbackground: '#bec3c7',\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tcolor: '#333',\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<FaTimes />\r\n\t\t\t{/* <MdClear /> */}\r\n\t\t</button>\r\n\t</li>\r\n\t)\r\n}\r\n\r\nexport default Card","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext, useState } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport Context from './Context'\r\nimport {\r\n\tgameAddOne,\r\n} from './Actions'\r\n\r\nimport {\r\n\tContextStateType,\r\n} from './types'\r\n\r\ninterface Props {\r\n\t// addGame: (name: string, number: number, price: number) => any\r\n}\r\n\r\nconst AddGame: React.FC<Props> = () => {\r\n\tconst { state, dispatch }: { state: ContextStateType, dispatch: any } = useContext(Context)\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\tconst [name, setName] = useState('')\r\n\tconst [number, setNumber] = useState(1000)\r\n\tconst [price, setPrice] = useState(5)\r\n\r\n\tconst submitGame = (e: any) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst inUse = state.games.reduce((acc, each) => {\r\n\t\t\tif (Number(number) === Number(each.number)) return true\r\n\t\t\telse return acc \r\n\t\t}, false)\r\n\r\n\t\tif (number === 1000 || !/[a-zA-Z]/gi.test(name) || inUse) return\r\n\r\n\t\tdispatch(gameAddOne(state.games, name, number, price))\r\n\t}\r\n\r\n\tconst toggleOpen = () => setOpen(!open)\r\n\r\n\tconst pricepoints: [5,3,2,1] = [5,3,2,1]\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button \r\n\t\t\t\tonClick={toggleOpen}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\topen\r\n\t\t\t\t\t\t? 'Add New Game'\r\n\t\t\t\t\t\t: 'Close'\r\n\t\t\t\t}\r\n\t\t\t</button>\r\n\t\t\t{\r\n\t\t\t\t!open && (\r\n\t\t\t\t\t<form\r\n\t\t\t\t\t\tonSubmit={submitGame}\r\n\t\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\talignItems: 'stretch',\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<select \r\n\t\t\t\t\t\t\t\tvalue={price}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setPrice(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpricepoints.map((each: number) => \r\n\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={each}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={each}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t£{each}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tmin={1000}\r\n\t\t\t\t\t\t\t\tmax={9999}\r\n\t\t\t\t\t\t\t\tvalue={number}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setNumber(e.target.value)}\r\n\t\t\t\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\t\t\t\twidth: '8ch',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue='Add Game'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AddGame","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport {\r\n\tGame,\r\n} from '../types'\r\n\r\nimport Context from '../Context'\r\n\r\nimport Card from './Card'\r\nimport AddGame from '../AddGame'\r\n\r\nconst CardList: React.FC = () => {\r\n\tconst { state } = useContext(Context)\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t// justifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<h3\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\tGames\r\n\t\t\t</h3>\r\n\t\t\t<AddGame />\r\n\t\t\t<ul\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tlistStyleType: 'none',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tstate.games.map((each: Game) => \r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={each.id}\r\n\t\t\t\t\t\t\tgame={each} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardList","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport { ContextAction } from '../types'\r\n\r\nimport Context from '../Context'\r\n\r\ninterface Props {\r\n\tseriesSwitch: string\r\n}\r\n\r\nconst Toggle: React.FC<Props> = ({\r\n\tseriesSwitch,\r\n}) => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\r\n\tconst { seriesActive, selectedColours } = state.ui\r\n\r\n\tconst id = `seriesVisualisationToggle_${seriesSwitch}`\r\n\r\n\tconst sanitiseLabel = (str: string) => {\r\n\t\treturn `${str.substring(0,1).toUpperCase()}${str.substring(1)}`\r\n\t}\r\n\r\n\tconst handleChange = (e: any) => {\r\n\t\tdispatch({\r\n\t\t\ttype: ContextAction.UI_SET_SERIES,\r\n\t\t\tpayload: {\r\n\t\t\t\tkey: seriesSwitch,\r\n\t\t\t\tvalue: !seriesActive[seriesSwitch]\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst w = 6\r\n\tconst h = 25\r\n\r\n\treturn (\r\n\t\t<li\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t}}\r\n\t\t>\t\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: `${w}px`,\r\n\t\t\t\t\theight: `${h}px`,\r\n\t\t\t\t\tbackgroundColor: selectedColours[seriesSwitch],\r\n\t\t\t\t\tmarginRight: 20,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<label \r\n\t\t\t\t\thtmlFor={id}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsanitiseLabel(seriesSwitch)\r\n\t\t\t\t\t}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tchecked={seriesActive[seriesSwitch]}\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tcss={css({\r\n\t\t\t\t\t\tmarginLeft: 40,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Toggle","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React, { useContext } from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport {\r\n\tContextStateType,\r\n} from '../types'\r\n\r\nimport Context from '../Context'\r\n\r\nimport Toggle from './Toggle'\r\n\r\nconst GraphControls: React.FC = () => {\r\n\tconst { state }: { state: ContextStateType } = useContext(Context)\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={css({\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t// justifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<h3\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\tFilter\r\n\t\t\t</h3>\r\n\t\t\t<ul\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\ttextAlign: 'left',\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tObject.keys(state.ui.seriesActive).map((series: any, idx: any) => \r\n\t\t\t\t\t\t<Toggle \r\n\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\tseriesSwitch={series}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GraphControls","/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport React from 'react'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nimport CardList from '../CardList/'\r\nimport GraphControls from '../GraphControls'\r\n\r\nconst SideMenu: React.FC = () => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tcss={css({\r\n\t\t\t\tbackground: '#464646',\r\n\t\t\t\tboxShadow: '10px 0px 10px rgba(0,0,0,.15)',\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tcss={css({\r\n\t\t\t\t\t// border: '1px dashed tomato',\r\n\t\t\t\t\tposition: 'sticky',\r\n\t\t\t\t\ttop: '0px',\r\n\t\t\t\t\tmaxHeight: '100vh',\r\n\t\t\t\t\toverflowY: 'auto',\r\n\t\t\t\t\tpadding: '0px 30px',\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<GraphControls />\r\n\t\t\t\t<CardList />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SideMenu","import React, { useContext } from 'react'\r\nimport { dayDecrement, dayIncrement, daySet } from './Actions'\r\nimport Context from './Context'\r\n\r\ninterface Props {\r\n\t\r\n}\r\n\r\nconst DayControls: React.FC<Props> = () => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\tconst { day, days } = state\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{days[day%7]}</p>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => dispatch(dayDecrement())}>Previous Day</button>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tvalue={day}\r\n\t\t\t\t\tonChange={(e: any) => daySet(e.target.value)} \r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={() => dispatch(dayIncrement())}>Next Day</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default DayControls ","import React, { useContext } from 'react'\r\nimport { seriesRemoveOne } from '../Actions'\r\nimport Context from '../Context'\r\n\r\ninterface Props {\r\n\tidx: number\r\n}\r\n\r\nconst Delete: React.FC<Props> = ({\r\n\tidx\r\n}) => {\r\n\tconst { dispatch } = useContext(Context)\r\n\r\n\tconst handleClick = () => {\r\n\t\tdispatch(seriesRemoveOne(idx))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={handleClick}\r\n\t\t>\r\n\t\t\tdel\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default Delete","import React, { useContext } from 'react'\r\n\r\nimport { \r\n\tGame,\r\n} from '../types'\r\n\r\nimport {\r\n\tgameChangeCard,\r\n\tseriesDataUpdateAdditions,\r\n\tseriesDataUpdateAM,\r\n\tseriesDataUpdatePM,\r\n\tseriesDataUpdateSales,\r\n\t// seriesUpdateSlot,\r\n} from '../Actions'\r\n\r\nimport Context from '../Context'\r\n\r\nimport Delete from './Delete'\r\n\r\ninterface Props {\r\n\tidx: number\r\n\tgameId: number\r\n}\r\n\r\nconst GameLine: React.FC<Props> = ({\r\n\tidx,\r\n\tgameId,\r\n}) => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\r\n\tconst data = state.series[idx].data\r\n\t// const slot = state.series[idx].slot\r\n\r\n\tconst { am, pm, add, sales } = data[state.day]\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<tr>\r\n\t\t\t{/* <td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='slot number (set 0 for no slot)'\r\n\t\t\t\t\tvalue={slot}\r\n\t\t\t\t\tonChange={(e: any) => dispatch(seriesUpdateSlot(idx, e.target.value))}\r\n\t\t\t\t/>\r\n\t\t\t</td> */}\r\n\t\t\t<td>\r\n\t\t\t\t<select\r\n\t\t\t\t\tvalue={gameId}\r\n\t\t\t\t\tonChange={(e: any) => dispatch(gameChangeCard(state.series, idx, e.target.value))}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate.games.map((each: Game) => \r\n\t\t\t\t\t\t\t<option \r\n\t\t\t\t\t\t\t\tvalue={each.id}\r\n\t\t\t\t\t\t\t\tkey={each.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ each.number } - { each.name }\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='AM Count' \r\n\t\t\t\t\tvalue={am} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdateAM(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='PM Count' \r\n\t\t\t\t\tvalue={pm} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdatePM(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='additions' \r\n\t\t\t\t\tvalue={add} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdateAdditions(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='number' \r\n\t\t\t\t\tplaceholder='VBS Sales' \r\n\t\t\t\t\tvalue={sales} \r\n\t\t\t\t\tonChange={((e: any) => dispatch(seriesDataUpdateSales(idx, e.target.value)))}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t\t{/* TODO: add delete */}\r\n\t\t\t<td>\r\n\t\t\t\t<Delete \r\n\t\t\t\t\tidx={idx as number}\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default GameLine","import React, { useContext, useState } from 'react'\r\n\r\nimport { Game } from './types'\r\nimport { seriesAddOne } from './Actions'\r\nimport Context from './Context'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddSeries: React.FC<Props> = () => {\r\n\tconst { state, dispatch } = useContext(Context)\r\n\tconst [game, setGame]: [number, any] = useState(0)\r\n\r\n\tconst handleSubmit = (e: any) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(seriesAddOne(game, 0, 6, 0))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t<select\r\n\t\t\t\tvalue={game}\r\n\t\t\t\tonChange={(e: any) => setGame(Number(e.target.value))}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tstate.games.map((each: Game) => \r\n\t\t\t\t\t\t<option \r\n\t\t\t\t\t\t\tvalue={each.id}\r\n\t\t\t\t\t\t\tkey={each.id}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ each.number } - { each.name }\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<input type='submit' value='Create New Series' />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default AddSeries","import React, {\r\n\tuseContext\r\n} from 'react'\r\n\r\nimport {\r\n\tSeries\r\n} from './types'\r\n\r\nimport Context from './Context'\r\n\r\nimport DayControls from './DayControls'\r\nimport GameLine from './GameLine/'\r\nimport AddSeries from './AddSeries'\r\n\r\nconst DataInput: React.FC = () => {\r\n\tconst { state } = useContext(Context)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<DayControls />\r\n\t\t\t<p>New Count</p>\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t{/* <th>Slot Number</th> */}\r\n\t\t\t\t\t\t<th>Game</th>\r\n\t\t\t\t\t\t<th>AM Count</th>\r\n\t\t\t\t\t\t<th>PM Count</th>\r\n\t\t\t\t\t\t<th>Additions</th>\r\n\t\t\t\t\t\t<th>Sales (VBS)</th>\r\n\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate.series.map((each: Series, idx: number) => \r\n\t\t\t\t\t\t\t<GameLine \r\n\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\tgameId={each.gameId}\r\n\t\t\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<AddSeries />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DataInput","\r\nimport { \r\n\tContextStateType, \r\n\tContextActionType,\r\n\tContextAction,\r\n} from './types'\r\n\r\nconst ContextReducer = (state: ContextStateType, action: ContextActionType) => {\r\n\tconsole.log(state, action)\r\n\tswitch (action.type) {\r\n\t\tcase ContextAction.GAME_ADD_ONE: return reduceGameAddOne(state, action)\r\n\t\tcase ContextAction.GAME_REMOVE_ONE: return reduceGameRemoveOne(state, action)\r\n\t\tcase ContextAction.DAY_SET: return reduceDaySet(state, action)\r\n\t\tcase ContextAction.DAY_INCREMENT: return reduceDayInc(state, action)\r\n\t\tcase ContextAction.DAY_DECREMENT: return reduceDayDec(state, action)\r\n\t\tcase ContextAction.SERIES_ADD_ONE: return reduceSeriesAddOne(state, action)\r\n\t\tcase ContextAction.SERIES_REMOVE_ONE: return reduceSerieseRemoveOne(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_AM: return reduceSeriesDataUpdateAM(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_PM: return reduceSeriesDataUpdatePM(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_SALES: return reduceSeriesDataUpdateSales(state, action)\r\n\t\tcase ContextAction.SERIES_DATA_UPDATE_ADDITIONS: return reduceSeriesDataUpdateAdditions(state, action)\r\n\t\tcase ContextAction.SERIES_UPDATE_CARD: return reduceSeriesChangeCard(state, action)\r\n\t\tcase ContextAction.SERIES_SLOT_UPDATE: return reduceSeriesSlotUpdate(state, action)\r\n\t\tcase ContextAction.UI_SET_SERIES: return reduceUiSetSeries(state, action)\r\n\t\tcase ContextAction.UI_SET_CROSSHAIR_POS: return reduceUiCrosshairSet(state, action)\r\n\t\tcase ContextAction.UI_UNSET_CROSSHAIR_POS: return reduceUiCrosshairReset(state, action)\r\n\t\tdefault: {\r\n\t\t\tconsole.warn(`Default route taken on reducer for action: [${action.type}]`, state, action)\r\n\t\t\treturn state\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reduceGameAddOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tgames: action.payload\r\n\t}\r\n}\r\n\r\nfunction reduceGameRemoveOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tgames: action.payload\r\n\t}\r\n}\r\n\r\nfunction reduceDaySet (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst val = Number(action.payload)\r\n\tif (isNaN(val) || val < 0 || val > 6) return  state\r\n\treturn {\r\n\t\t...state,\r\n\t\tday: val\r\n\t}\r\n}\r\n\r\nfunction reduceDayInc (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tif (state.day === 6) return state\r\n\treturn {\r\n\t\t...state,\r\n\t\tday: state.day + 1\r\n\t}\r\n}\r\n\r\nfunction reduceDayDec (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tif (state.day === 0) return state\r\n\treturn {\r\n\t\t...state,\r\n\t\tday: state.day - 1\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesAddOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries: [\r\n\t\t\t...state.series,\r\n\t\t\taction.payload\r\n\t\t]\r\n\t}\r\n}\r\n\r\nfunction reduceSerieseRemoveOne (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst first = state.series.slice(0, action.payload)\r\n\tconst second = state.series.slice(action.payload + 1)\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries: first.concat(second)\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesSlotUpdate (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tif (isNaN(value) || value < 0 || value > 16) return state\r\n\tconst series = [...state.series]\r\n\tseries[seriesIdx].slot = value\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdateAM (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], am: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdatePM (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], pm: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdateSales (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], sales: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesDataUpdateAdditions (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\tconst { seriesIdx, value } = action.payload\r\n\tconst series = [...state.series]\r\n\tconst updateData = [...state.series[seriesIdx].data]\r\n\tupdateData[state.day] = { ...updateData[state.day], add: value }\r\n\tseries[seriesIdx].data = updateData\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries\r\n\t}\r\n}\r\n\r\nfunction reduceSeriesChangeCard (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tseries: action.payload,\r\n\t}\r\n}\r\n\r\nfunction reduceUiSetSeries (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tui: {\r\n\t\t\t...state.ui,\r\n\t\t\tseriesActive: {\r\n\t\t\t\t...state.ui.seriesActive,\r\n\t\t\t\t[action.payload.key]: action.payload.value\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reduceUiCrosshairSet (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tui: {\r\n\t\t\t...state.ui,\r\n\t\t\tcrosshairPosition: action.payload\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reduceUiCrosshairReset (state: ContextStateType, action: ContextActionType): ContextStateType {\r\n\treturn {\r\n\t\t...state,\r\n\t\tui: {\r\n\t\t\t...state.ui,\r\n\t\t\tcrosshairPosition: null\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ContextReducer","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport React, { \n\tuseReducer, \n\tDispatch,\n} from 'react'\nimport { css, jsx } from '@emotion/react'\n\nimport './App.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nimport Graphs from './Graphs'\nimport SideMenu from './SideMenu/'\nimport DataInput from './DataInput'\n\nimport {\n\tinitialContextState,\n} from './Utils'\n\nimport ContextReducer from './Reducer'\n\nimport { \n\tContextStateType, \n\tContextActionType \n} from './types'\n\nimport Context from './Context'\n\nconst App: React.FC = () => {\n\tconst [state, dispatch]: [ContextStateType, Dispatch<ContextActionType>] = useReducer(ContextReducer, initialContextState)\n\n  return (\n\t\t<Context.Provider\n\t\t\tvalue={{ state, dispatch }}\n\t\t>\n\t\t\t<div \n\t\t\t\tclassName=\"App\"\n\t\t\t\tcss={css({\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tminHeight: '100vh',\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<SideMenu />\n\t\t\t\t<div\n\t\t\t\t\tcss={css({\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<DataInput />\n\t\t\t\t\t<Graphs />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Context.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}